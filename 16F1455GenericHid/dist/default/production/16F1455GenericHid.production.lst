

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon May 01 18:08:37 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x20,16,_Interfaces
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0091                     	;# 
    73  0092                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010E                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0197                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  020C                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  0212                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0217                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  039A                     	;# 
   137  039B                     	;# 
   138  0611                     	;# 
   139  0612                     	;# 
   140  0613                     	;# 
   141  0613                     	;# 
   142  0614                     	;# 
   143  0615                     	;# 
   144  0616                     	;# 
   145  0616                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0E8E                     	;# 
   152  0E8F                     	;# 
   153  0E90                     	;# 
   154  0E91                     	;# 
   155  0E92                     	;# 
   156  0E93                     	;# 
   157  0E94                     	;# 
   158  0E94                     	;# 
   159  0E95                     	;# 
   160  0E96                     	;# 
   161  0E97                     	;# 
   162  0E98                     	;# 
   163  0E99                     	;# 
   164  0E9A                     	;# 
   165  0E9B                     	;# 
   166  0E9C                     	;# 
   167  0E9D                     	;# 
   168  0E9E                     	;# 
   169  0E9F                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000E                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  008C                     	;# 
   207  008E                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010E                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0113                     	;# 
   227  0114                     	;# 
   228  0115                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0118                     	;# 
   232  0119                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  018E                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0194                     	;# 
   242  0195                     	;# 
   243  0196                     	;# 
   244  0197                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019E                     	;# 
   252  019F                     	;# 
   253  020C                     	;# 
   254  0211                     	;# 
   255  0211                     	;# 
   256  0212                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0213                     	;# 
   260  0214                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0216                     	;# 
   266  0216                     	;# 
   267  0217                     	;# 
   268  0217                     	;# 
   269  0391                     	;# 
   270  0392                     	;# 
   271  0393                     	;# 
   272  039A                     	;# 
   273  039B                     	;# 
   274  0611                     	;# 
   275  0612                     	;# 
   276  0613                     	;# 
   277  0613                     	;# 
   278  0614                     	;# 
   279  0615                     	;# 
   280  0616                     	;# 
   281  0616                     	;# 
   282  0691                     	;# 
   283  0692                     	;# 
   284  0693                     	;# 
   285  0694                     	;# 
   286  0695                     	;# 
   287  0E8E                     	;# 
   288  0E8F                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E93                     	;# 
   293  0E94                     	;# 
   294  0E94                     	;# 
   295  0E95                     	;# 
   296  0E96                     	;# 
   297  0E97                     	;# 
   298  0E98                     	;# 
   299  0E99                     	;# 
   300  0E9A                     	;# 
   301  0E9B                     	;# 
   302  0E9C                     	;# 
   303  0E9D                     	;# 
   304  0E9E                     	;# 
   305  0E9F                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317                           
   318                           	psect	idataBANK0
   319  0714                     __pidataBANK0:	
   320                           
   321                           ;initializer for _Buffers
   322  0714  3408               	retlw	8
   323  0715  3459               	retlw	low (_HIDTxBuffer| 0)
   324  0716  3408               	retlw	8
   325  0717  3451               	retlw	low (_HIDRxBuffer| 0)
   326                           
   327                           	psect	stringtext
   328  002F                     __pstringtext:	
   329  002F                     _StringDescriptorPointers:	
   330  002F  34ED               	retlw	low (_StringDescriptor0| (0+32768))
   331  0030  3480               	retlw	high (_StringDescriptor0| (0+32768))
   332  0031  34C3               	retlw	low (_StringDescriptor1| (0+32768))
   333  0032  3480               	retlw	high (_StringDescriptor1| (0+32768))
   334  0033  3435               	retlw	low (_StringDescriptor2| (0+32768))
   335  0034  3480               	retlw	high (_StringDescriptor2| (0+32768))
   336  0035                     __end_of_StringDescriptorPointers:	
   337  0035                     _StringDescriptor2:	
   338  0035  3436               	retlw	54
   339  0036  3403               	retlw	3
   340  0037  3431               	retlw	49
   341  0038  3400               	retlw	0
   342  0039  3436               	retlw	54
   343  003A  3400               	retlw	0
   344  003B  3446               	retlw	70
   345  003C  3400               	retlw	0
   346  003D  3431               	retlw	49
   347  003E  3400               	retlw	0
   348  003F  3434               	retlw	52
   349  0040  3400               	retlw	0
   350  0041  3435               	retlw	53
   351  0042  3400               	retlw	0
   352  0043  3435               	retlw	53
   353  0044  3400               	retlw	0
   354  0045  3420               	retlw	32
   355  0046  3400               	retlw	0
   356  0047  3447               	retlw	71
   357  0048  3400               	retlw	0
   358  0049  3465               	retlw	101
   359  004A  3400               	retlw	0
   360  004B  346E               	retlw	110
   361  004C  3400               	retlw	0
   362  004D  3465               	retlw	101
   363  004E  3400               	retlw	0
   364  004F  3472               	retlw	114
   365  0050  3400               	retlw	0
   366  0051  3469               	retlw	105
   367  0052  3400               	retlw	0
   368  0053  3463               	retlw	99
   369  0054  3400               	retlw	0
   370  0055  3420               	retlw	32
   371  0056  3400               	retlw	0
   372  0057  3448               	retlw	72
   373  0058  3400               	retlw	0
   374  0059  3449               	retlw	73
   375  005A  3400               	retlw	0
   376  005B  3444               	retlw	68
   377  005C  3400               	retlw	0
   378  005D  3420               	retlw	32
   379  005E  3400               	retlw	0
   380  005F  3444               	retlw	68
   381  0060  3400               	retlw	0
   382  0061  3465               	retlw	101
   383  0062  3400               	retlw	0
   384  0063  3476               	retlw	118
   385  0064  3400               	retlw	0
   386  0065  3469               	retlw	105
   387  0066  3400               	retlw	0
   388  0067  3463               	retlw	99
   389  0068  3400               	retlw	0
   390  0069  3465               	retlw	101
   391  006A  3400               	retlw	0
   392  006B                     __end_of_StringDescriptor2:	
   393  006B                     _HIDReport:	
   394  006B  3406               	retlw	6
   395  006C  34A0               	retlw	160
   396  006D  34FF               	retlw	255
   397  006E  3409               	retlw	9
   398  006F  3401               	retlw	1
   399  0070  34A1               	retlw	161
   400  0071  3401               	retlw	1
   401  0072  3409               	retlw	9
   402  0073  3401               	retlw	1
   403  0074  3415               	retlw	21
   404  0075  3400               	retlw	0
   405  0076  3426               	retlw	38
   406  0077  34FF               	retlw	255
   407  0078  3400               	retlw	0
   408  0079  3475               	retlw	117
   409  007A  3408               	retlw	8
   410  007B  3495               	retlw	149
   411  007C  3408               	retlw	8
   412  007D  3481               	retlw	129
   413  007E  3402               	retlw	2
   414  007F  3409               	retlw	9
   415  0080  3401               	retlw	1
   416  0081  3415               	retlw	21
   417  0082  3400               	retlw	0
   418  0083  3426               	retlw	38
   419  0084  34FF               	retlw	255
   420  0085  3400               	retlw	0
   421  0086  3475               	retlw	117
   422  0087  3408               	retlw	8
   423  0088  3495               	retlw	149
   424  0089  3408               	retlw	8
   425  008A  3491               	retlw	145
   426  008B  3402               	retlw	2
   427  008C  3409               	retlw	9
   428  008D  3402               	retlw	2
   429  008E  3415               	retlw	21
   430  008F  3400               	retlw	0
   431  0090  3426               	retlw	38
   432  0091  34FF               	retlw	255
   433  0092  3400               	retlw	0
   434  0093  3475               	retlw	117
   435  0094  3408               	retlw	8
   436  0095  3495               	retlw	149
   437  0096  3408               	retlw	8
   438  0097  34B1               	retlw	177
   439  0098  3402               	retlw	2
   440  0099  34C0               	retlw	192
   441  009A                     __end_of_HIDReport:	
   442  009A                     _ConfigurationDescriptor:	
   443  009A  3409               	retlw	9
   444  009B  3402               	retlw	2
   445  009C  3429               	retlw	41
   446  009D  3400               	retlw	0
   447  009E  3401               	retlw	1
   448  009F  3401               	retlw	1
   449  00A0  3400               	retlw	0
   450  00A1  34A0               	retlw	160
   451  00A2  3432               	retlw	50
   452  00A3  3409               	retlw	9
   453  00A4  3404               	retlw	4
   454  00A5  3400               	retlw	0
   455  00A6  3400               	retlw	0
   456  00A7  3402               	retlw	2
   457  00A8  3403               	retlw	3
   458  00A9  3400               	retlw	0
   459  00AA  3400               	retlw	0
   460  00AB  3400               	retlw	0
   461  00AC  3409               	retlw	9
   462  00AD  3421               	retlw	33
   463  00AE  3411               	retlw	17
   464  00AF  3401               	retlw	1
   465  00B0  3400               	retlw	0
   466  00B1  3401               	retlw	1
   467  00B2  3422               	retlw	34
   468  00B3  342F               	retlw	47
   469  00B4  3400               	retlw	0
   470  00B5  3407               	retlw	7
   471  00B6  3405               	retlw	5
   472  00B7  3481               	retlw	129
   473  00B8  3403               	retlw	3
   474  00B9  3408               	retlw	8
   475  00BA  3400               	retlw	0
   476  00BB  3401               	retlw	1
   477  00BC  3407               	retlw	7
   478  00BD  3405               	retlw	5
   479  00BE  3401               	retlw	1
   480  00BF  3403               	retlw	3
   481  00C0  3408               	retlw	8
   482  00C1  3400               	retlw	0
   483  00C2  3401               	retlw	1
   484  00C3                     __end_of_ConfigurationDescriptor:	
   485  00C3                     _StringDescriptor1:	
   486  00C3  3418               	retlw	24
   487  00C4  3403               	retlw	3
   488  00C5  3444               	retlw	68
   489  00C6  3400               	retlw	0
   490  00C7  3449               	retlw	73
   491  00C8  3400               	retlw	0
   492  00C9  3459               	retlw	89
   493  00CA  3400               	retlw	0
   494  00CB  3420               	retlw	32
   495  00CC  3400               	retlw	0
   496  00CD  3444               	retlw	68
   497  00CE  3400               	retlw	0
   498  00CF  3465               	retlw	101
   499  00D0  3400               	retlw	0
   500  00D1  3476               	retlw	118
   501  00D2  3400               	retlw	0
   502  00D3  3469               	retlw	105
   503  00D4  3400               	retlw	0
   504  00D5  3463               	retlw	99
   505  00D6  3400               	retlw	0
   506  00D7  3465               	retlw	101
   507  00D8  3400               	retlw	0
   508  00D9  3473               	retlw	115
   509  00DA  3400               	retlw	0
   510  00DB                     __end_of_StringDescriptor1:	
   511  00DB                     _DeviceDescriptor:	
   512  00DB  3412               	retlw	18
   513  00DC  3401               	retlw	1
   514  00DD  3400               	retlw	0
   515  00DE  3402               	retlw	2
   516  00DF  3400               	retlw	0
   517  00E0  3400               	retlw	0
   518  00E1  3400               	retlw	0
   519  00E2  3408               	retlw	8
   520  00E3  34D8               	retlw	216
   521  00E4  3404               	retlw	4
   522  00E5  34A5               	retlw	165
   523  00E6  3401               	retlw	1
   524  00E7  3401               	retlw	1
   525  00E8  3400               	retlw	0
   526  00E9  3401               	retlw	1
   527  00EA  3402               	retlw	2
   528  00EB  3400               	retlw	0
   529  00EC  3401               	retlw	1
   530  00ED                     __end_of_DeviceDescriptor:	
   531  00ED                     _StringDescriptor0:	
   532  00ED  3404               	retlw	4
   533  00EE  3403               	retlw	3
   534  00EF  3409               	retlw	9
   535  00F0  3404               	retlw	4
   536  00F1                     __end_of_StringDescriptor0:	
   537  000B                     _INTCONbits	set	11
   538  0012                     _PIR2bits	set	18
   539  0072                     _RC2	set	114
   540  0073                     _RC3	set	115
   541  0095                     _OPTION_REG	set	149
   542  0099                     _OSCCON	set	153
   543  0098                     _OSCTUNE	set	152
   544  0092                     _PIE2bits	set	146
   545  008E                     _TRISC	set	142
   546  010E                     _LATC	set	270
   547  018C                     _ANSELA	set	396
   548  018E                     _ANSELC	set	398
   549  039B                     _ACTCON	set	923
   550  0E99                     _EndpointFlags	set	3737
   551  0E96                     _UADDR	set	3734
   552  0E91                     _UCFG	set	3729
   553  0E8E                     _UCON	set	3726
   554  0E8E                     _UCONbits	set	3726
   555  0E97                     _UEIE	set	3735
   556  0E93                     _UEIR	set	3731
   557  0E98                     _UEP0	set	3736
   558  0E98                     _UEP0bits	set	3736
   559  0E92                     _UIE	set	3730
   560  0E92                     _UIEbits	set	3730
   561  0E90                     _UIR	set	3728
   562  0E90                     _UIRbits	set	3728
   563  0E8F                     _USTAT	set	3727
   564                           
   565                           ; #config settings
   566  0000                     
   567                           	psect	cinit
   568  0014                     start_initialization:	
   569  0014                     __initialization:	
   570                           
   571                           ; Clear objects allocated to BANK0
   572  0014  3030               	movlw	low __pbssBANK0
   573  0015  0084               	movwf	4
   574  0016  3000               	movlw	high __pbssBANK0
   575  0017  0085               	movwf	5
   576  0018  3034               	movlw	52
   577  0019  3187  270E  3180   	fcall	clear_ram0
   578                           
   579                           ; Initialize objects allocated to BANK0
   580  001C  3187  2714  3180   	fcall	__pidataBANK0	;fetch initializer
   581  001F  00E4               	movwf	__pdataBANK0& (0+127)
   582  0020  3187  2715  3180   	fcall	__pidataBANK0+1	;fetch initializer
   583  0023  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   584  0024  3187  2716  3180   	fcall	__pidataBANK0+2	;fetch initializer
   585  0027  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   586  0028  3187  2717         	fcall	__pidataBANK0+3	;fetch initializer
   587  002A  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   588  002B                     end_of_initialization:	
   589                           ;End of C runtime variable initialization code
   590                           
   591  002B                     __end_of__initialization:	
   592  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   593  002C  0020               	movlb	0
   594  002D  3186  2EC0         	ljmp	_main	;jump to C main() function
   595                           
   596                           	psect	bssBANK0
   597  0030                     __pbssBANK0:	
   598  0030                     _ROMoutPtr:	
   599  0030                     	ds	2
   600  0032                     _wCount:	
   601  0032                     	ds	2
   602  0034                     _ButtonStatus:	
   603  0034                     	ds	1
   604  0035                     _CtrlTransferStage:	
   605  0035                     	ds	1
   606  0036                     _DeviceAddress:	
   607  0036                     	ds	1
   608  0037                     _DeviceState:	
   609  0037                     	ds	1
   610  0038                     _HIDPostProcess:	
   611  0038                     	ds	1
   612  0039                     _HidRxLen:	
   613  0039                     	ds	1
   614  003A                     _RemoteWakeup:	
   615  003A                     	ds	1
   616  003B                     _RequestHandled:	
   617  003B                     	ds	1
   618  003C                     _SelfPowered:	
   619  003C                     	ds	1
   620  003D                     _inPtr:	
   621  003D                     	ds	1
   622  003E                     _outPtr:	
   623  003E                     	ds	1
   624  003F                     _transferType:	
   625  003F                     	ds	1
   626  0040                     _SetupPacket:	
   627  0040                     	ds	9
   628  0049                     _ControlTransferBuffer:	
   629  0049                     	ds	8
   630  0051                     _HIDRxBuffer:	
   631  0051                     	ds	8
   632  0059                     _HIDTxBuffer:	
   633  0059                     	ds	8
   634  0061                     _CurrentConfiguration:	
   635  0061                     	ds	1
   636  0062                     _HidIdleRate:	
   637  0062                     	ds	1
   638  0063                     _HidProtocol:	
   639  0063                     	ds	1
   640                           
   641                           	psect	dataBANK0
   642  0064                     __pdataBANK0:	
   643  0064                     _Buffers:	
   644  0064                     	ds	4
   645                           
   646                           	psect	clrtext
   647  070E                     clear_ram0:	
   648                           ;	Called with FSR0 containing the base address, and
   649                           ;	WREG with the size to clear
   650                           
   651  070E  0064               	clrwdt	;clear the watchdog before getting into this loop
   652  070F                     clrloop0:	
   653  070F  0180               	clrf	0	;clear RAM location pointed to by FSR
   654  0710  3101               	addfsr 0,1
   655  0711  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   656  0712  2F0F               	goto	clrloop0	;have we reached the end yet?
   657  0713  3400               	retlw	0	;all done for this memory range, return
   658                           
   659                           	psect	cstackCOMMON
   660  0070                     __pcstackCOMMON:	
   661  0070                     ?_ProcessUSBTransactions:	
   662  0070                     ?_ReArmInterface:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_HIDSend:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?_InitializeUSB:	
   669                           ; 0 bytes @ 0x0
   670                           
   671  0070                     ?_EnableUSBModule:	
   672                           ; 0 bytes @ 0x0
   673                           
   674  0070                     ?_ISRCode:	
   675                           ; 0 bytes @ 0x0
   676                           
   677  0070                     ?_InitializeSystem:	
   678                           ; 0 bytes @ 0x0
   679                           
   680  0070                     ?_EnableInterrupts:	
   681                           ; 0 bytes @ 0x0
   682                           
   683  0070                     ?_PrepareTxBuffer:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_ProcessIncommingData:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_CheckUsb:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?_ProcessIO:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_main:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_HIDInitEndpoints:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ??_HIDInitEndpoints:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_ProcessHIDRequest:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ??_ProcessHIDRequest:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_GetDescriptor:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ??_GetDescriptor:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_GetStatus:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ??_GetStatus:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_SetFeature:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ??_SetFeature:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_ProcessStandardRequest:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_InDataStage:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ??_InDataStage:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_OutDataStage:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ??_OutDataStage:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_SetupStage:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_WaitForSetupStage:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ??_WaitForSetupStage:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?_ProcessControlTransfer:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_ResetPPBuffers:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0070                     ?_UnSuspend:	
   759                           ; 0 bytes @ 0x0
   760                           
   761  0070                     ??_UnSuspend:	
   762                           ; 0 bytes @ 0x0
   763                           
   764  0070                     ?_StartOfFrame:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0070                     ??_StartOfFrame:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0070                     ?_Stall:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0070                     ?_Suspend:	
   774                           ; 0 bytes @ 0x0
   775                           
   776  0070                     ??_Suspend:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0070                     ?_BusReset:	
   780                           ; 0 bytes @ 0x0
   781                           
   782  0070                     ?_IsUsbDataAvaialble:	
   783                           ; 0 bytes @ 0x0
   784                           
   785                           
   786                           ; 1 bytes @ 0x0
   787  0070                     	ds	1
   788  0071                     ??_Stall:	
   789  0071                     ??_BusReset:	
   790                           ; 0 bytes @ 0x1
   791                           
   792  0071                     ProcessHIDRequest@descriptorType:	
   793                           ; 0 bytes @ 0x1
   794                           
   795  0071                     OutDataStage@i:	
   796                           ; 1 bytes @ 0x1
   797                           
   798                           
   799                           ; 2 bytes @ 0x1
   800  0071                     	ds	1
   801  0072                     ProcessHIDRequest@bRequest:	
   802  0072                     GetStatus@endpointNum:	
   803                           ; 1 bytes @ 0x2
   804                           
   805  0072                     SetFeature@recipient:	
   806                           ; 1 bytes @ 0x2
   807                           
   808  0072                     InDataStage@i:	
   809                           ; 1 bytes @ 0x2
   810                           
   811                           
   812                           ; 1 bytes @ 0x2
   813  0072                     	ds	1
   814  0073                     GetDescriptor@descriptorIndex:	
   815  0073                     GetStatus@endpointDir:	
   816                           ; 1 bytes @ 0x3
   817                           
   818  0073                     SetFeature@feature:	
   819                           ; 1 bytes @ 0x3
   820                           
   821  0073                     InDataStage@bufferSize:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0073                     OutDataStage@bufferSize:	
   825                           ; 2 bytes @ 0x3
   826                           
   827                           
   828                           ; 2 bytes @ 0x3
   829  0073                     	ds	1
   830  0074                     HIDInitEndpoints@i:	
   831  0074                     GetDescriptor@descriptorType:	
   832                           ; 1 bytes @ 0x4
   833                           
   834  0074                     GetStatus@recipient:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0074                     SetFeature@endpointNum:	
   838                           ; 1 bytes @ 0x4
   839                           
   840                           
   841                           ; 1 bytes @ 0x4
   842  0074                     	ds	1
   843  0075                     SetFeature@endpointDir:	
   844                           
   845                           ; 1 bytes @ 0x5
   846  0075                     	ds	1
   847  0076                     ??_ProcessStandardRequest:	
   848                           
   849                           ; 0 bytes @ 0x6
   850  0076                     	ds	1
   851  0077                     ProcessStandardRequest@request:	
   852                           
   853                           ; 1 bytes @ 0x7
   854  0077                     	ds	1
   855  0078                     ??_SetupStage:	
   856                           
   857                           ; 0 bytes @ 0x8
   858  0078                     	ds	1
   859  0079                     ??_ProcessControlTransfer:	
   860                           
   861                           ; 0 bytes @ 0x9
   862  0079                     	ds	2
   863  007B                     ProcessControlTransfer@PID:	
   864                           
   865                           ; 1 bytes @ 0xB
   866  007B                     	ds	1
   867  007C                     ??_ProcessUSBTransactions:	
   868                           
   869                           ; 0 bytes @ 0xC
   870  007C                     	ds	1
   871  007D                     ??_ISRCode:	
   872                           
   873                           ; 0 bytes @ 0xD
   874  007D                     	ds	1
   875                           
   876                           	psect	cstackBANK0
   877  0068                     __pcstackBANK0:	
   878  0068                     ??_IsUsbDataAvaialble:	
   879  0068                     ??_ReArmInterface:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  0068                     ??_HIDSend:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  0068                     ??_InitializeUSB:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  0068                     ??_EnableUSBModule:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  0068                     ??_InitializeSystem:	
   892                           ; 0 bytes @ 0x0
   893                           
   894  0068                     ??_EnableInterrupts:	
   895                           ; 0 bytes @ 0x0
   896                           
   897  0068                     ??_PrepareTxBuffer:	
   898                           ; 0 bytes @ 0x0
   899                           
   900  0068                     ??_ResetPPBuffers:	
   901                           ; 0 bytes @ 0x0
   902                           
   903                           
   904                           ; 0 bytes @ 0x0
   905  0068                     	ds	1
   906  0069                     PrepareTxBuffer@i:	
   907  0069                     IsUsbDataAvaialble@InterfaceNo:	
   908                           ; 1 bytes @ 0x1
   909                           
   910                           
   911                           ; 1 bytes @ 0x1
   912  0069                     	ds	1
   913  006A                     ??_ProcessIncommingData:	
   914  006A                     ReArmInterface@InterfaceNo:	
   915                           ; 0 bytes @ 0x2
   916                           
   917  006A                     HIDSend@InterfaceNo:	
   918                           ; 1 bytes @ 0x2
   919                           
   920                           
   921                           ; 1 bytes @ 0x2
   922  006A                     	ds	1
   923  006B                     ??_CheckUsb:	
   924  006B                     ??_ProcessIO:	
   925                           ; 0 bytes @ 0x3
   926                           
   927  006B                     ??_main:	
   928                           ; 0 bytes @ 0x3
   929                           
   930                           
   931                           	psect	maintext
   932  06C0                     __pmaintext:	
   933                           ; 0 bytes @ 0x3
   934 ;;
   935 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   936 ;;
   937 ;; *************** function _main *****************
   938 ;; Defined at:
   939 ;;		line 134 in file "Source/Main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;		None               void
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : B1F/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels required when called:   10
   959 ;; This function calls:
   960 ;;		_EnableInterrupts
   961 ;;		_EnableUSBModule
   962 ;;		_InitializeSystem
   963 ;;		_InitializeUSB
   964 ;;		_ProcessIO
   965 ;; This function is called by:
   966 ;;		Startup code after reset
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _main
   972  06C0                     _main:	
   973                           
   974                           ;Main.c: 136: InitializeSystem();
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   978  06C0  3186  269A  3186   	fcall	_InitializeSystem
   979                           
   980                           ;Main.c: 137: InitializeUSB();
   981  06C3  3186  26D0  3186   	fcall	_InitializeUSB
   982                           
   983                           ;Main.c: 138: EnableUSBModule();
   984  06C6  3186  266F  3186   	fcall	_EnableUSBModule
   985                           
   986                           ;Main.c: 139: EnableInterrupts();
   987  06C9  3186  26F6  3186   	fcall	_EnableInterrupts
   988  06CC                     l2187:	
   989                           ;Main.c: 141: while(1) { ProcessIO(); }
   990                           
   991  06CC  3186  2637  3186   	fcall	_ProcessIO
   992  06CF  2ECC               	goto	l2187
   993  06D0                     __end_of_main:	
   994                           
   995                           	psect	text1
   996  0637                     __ptext1:	
   997 ;; *************** function _ProcessIO *****************
   998 ;; Defined at:
   999 ;;		line 118 in file "Source/Main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    9
  1020 ;; This function calls:
  1021 ;;		_CheckUsb
  1022 ;;		_HIDSend
  1023 ;;		_PrepareTxBuffer
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _ProcessIO
  1031  0637                     _ProcessIO:	
  1032                           
  1033                           ;Main.c: 121: if (((DeviceState == 0x05) && (UCONbits.SUSPND==0))) CheckUsb();
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _ProcessIO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1037  0637  3005               	movlw	5
  1038  0638  0020               	movlb	0	; select bank0
  1039  0639  0637               	xorwf	_DeviceState,w
  1040  063A  1D03               	btfss	3,2
  1041  063B  2E42               	goto	l2141
  1042  063C  003D               	movlb	29	; select bank29
  1043  063D  188E               	btfsc	14,1	;volatile
  1044  063E  2E42               	goto	l2141
  1045  063F  3186  26AE  3186   	fcall	_CheckUsb
  1046  0642                     l2141:	
  1047                           
  1048                           ;Main.c: 124: if (RC2 == ButtonStatus ) return;
  1049  0642  3000               	movlw	0
  1050  0643  0020               	movlb	0	; select bank0
  1051  0644  190E               	btfsc	14,2	;volatile
  1052  0645  3001               	movlw	1
  1053  0646  0634               	xorwf	_ButtonStatus,w
  1054  0647  1903               	btfsc	3,2
  1055  0648  0008               	return
  1056                           
  1057                           ;Main.c: 127: PrepareTxBuffer();
  1058  0649  3186  2618  3186   	fcall	_PrepareTxBuffer
  1059                           
  1060                           ;Main.c: 128: HIDSend(0x00);
  1061  064C  3000               	movlw	0
  1062  064D  3185  2517         	fcall	_HIDSend
  1063                           
  1064                           ;Main.c: 131: ButtonStatus = RC2;
  1065  064F  3000               	movlw	0
  1066  0650  0020               	movlb	0	; select bank0
  1067  0651  190E               	btfsc	14,2	;volatile
  1068  0652  3001               	movlw	1
  1069  0653  00B4               	movwf	_ButtonStatus
  1070  0654  0008               	return
  1071  0655                     __end_of_ProcessIO:	
  1072                           
  1073                           	psect	text2
  1074  06AE                     __ptext2:	
  1075 ;; *************** function _CheckUsb *****************
  1076 ;; Defined at:
  1077 ;;		line 108 in file "Source/Main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    8
  1098 ;; This function calls:
  1099 ;;		_HIDSend
  1100 ;;		_IsUsbDataAvaialble
  1101 ;;		_ProcessIncommingData
  1102 ;;		_ReArmInterface
  1103 ;; This function is called by:
  1104 ;;		_ProcessIO
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _CheckUsb
  1110  06AE                     _CheckUsb:	
  1111                           
  1112                           ;Main.c: 110: if(IsUsbDataAvaialble(0x00) > 0 )
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _CheckUsb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1116  06AE  3000               	movlw	0
  1117  06AF  3185  25F3  3186   	fcall	_IsUsbDataAvaialble
  1118  06B2  3A00               	xorlw	0
  1119  06B3  1903               	skipnz
  1120  06B4  0008               	return
  1121                           
  1122                           ;Main.c: 111: {
  1123                           ;Main.c: 112: ProcessIncommingData();
  1124  06B5  3186  2685  3186   	fcall	_ProcessIncommingData
  1125                           
  1126                           ;Main.c: 113: ReArmInterface(0x00);
  1127  06B8  3000               	movlw	0
  1128  06B9  3184  24C1  3186   	fcall	_ReArmInterface
  1129                           
  1130                           ;Main.c: 114: HIDSend(0x00);
  1131  06BC  3000               	movlw	0
  1132  06BD  3185  2517         	fcall	_HIDSend
  1133  06BF  0008               	return
  1134  06C0                     __end_of_CheckUsb:	
  1135                           
  1136                           	psect	text3
  1137  04C1                     __ptext3:	
  1138 ;; *************** function _ReArmInterface *****************
  1139 ;; Defined at:
  1140 ;;		line 194 in file "Source/Usb.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  InterfaceNo     1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  InterfaceNo     1    2[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1158 ;;Total ram usage:        3 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    6
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_CheckUsb
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _ReArmInterface
  1170  04C1                     _ReArmInterface:	
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _ReArmInterface: [wreg+fsr1l+fsr1h+status,2+status,0]
  1174                           ;ReArmInterface@InterfaceNo stored from wreg
  1175  04C1  0020               	movlb	0	; select bank0
  1176  04C2  00EA               	movwf	ReArmInterface@InterfaceNo
  1177                           
  1178                           ;Usb.c: 200: if(!(Interfaces[InterfaceNo + 1].Output.Stat & 0x80))
  1179  04C3  086A               	movf	ReArmInterface@InterfaceNo,w
  1180  04C4  00E8               	movwf	??_ReArmInterface
  1181  04C5  3002               	movlw	2
  1182  04C6                     u2005:	
  1183  04C6  35E8               	lslf	??_ReArmInterface,f
  1184  04C7  3EFF               	addlw	-1
  1185  04C8  1D03               	skipz
  1186  04C9  2CC6               	goto	u2005
  1187  04CA  3568               	lslf	??_ReArmInterface,w
  1188  04CB  3E08               	addlw	8
  1189  04CC  3E20               	addlw	32
  1190  04CD  0086               	movwf	6
  1191  04CE  0187               	clrf	7
  1192  04CF  1B81               	btfsc	1,7
  1193  04D0  0008               	return
  1194                           
  1195                           ;Usb.c: 201: {
  1196                           ;Usb.c: 203: Interfaces[InterfaceNo + 1].Output.Cnt = Buffers[(InterfaceNo * 2) + 1].Siz
      +                          e;
  1197  04D1  356A               	lslf	ReArmInterface@InterfaceNo,w
  1198  04D2  0709               	addwf	9,w
  1199  04D3  3E02               	addlw	2
  1200  04D4  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  1201  04D5  0086               	movwf	6
  1202  04D6  0187               	clrf	7
  1203  04D7  0801               	movf	1,w
  1204  04D8  00E8               	movwf	??_ReArmInterface
  1205  04D9  086A               	movf	ReArmInterface@InterfaceNo,w
  1206  04DA  00E9               	movwf	??_ReArmInterface+1
  1207  04DB  3002               	movlw	2
  1208  04DC                     u2025:	
  1209  04DC  35E9               	lslf	??_ReArmInterface+1,f
  1210  04DD  3EFF               	addlw	-1
  1211  04DE  1D03               	skipz
  1212  04DF  2CDC               	goto	u2025
  1213  04E0  3569               	lslf	??_ReArmInterface+1,w
  1214  04E1  3E09               	addlw	9
  1215  04E2  3E20               	addlw	32
  1216  04E3  0086               	movwf	6
  1217  04E4  0187               	clrf	7
  1218  04E5  0868               	movf	??_ReArmInterface,w
  1219  04E6  0081               	movwf	1
  1220                           
  1221                           ;Usb.c: 207: if(Interfaces[InterfaceNo + 1].Output.Stat & 0x40)
  1222  04E7  086A               	movf	ReArmInterface@InterfaceNo,w
  1223  04E8  00E8               	movwf	??_ReArmInterface
  1224  04E9  3002               	movlw	2
  1225  04EA                     u2035:	
  1226  04EA  35E8               	lslf	??_ReArmInterface,f
  1227  04EB  3EFF               	addlw	-1
  1228  04EC  1D03               	skipz
  1229  04ED  2CEA               	goto	u2035
  1230  04EE  3568               	lslf	??_ReArmInterface,w
  1231  04EF  3E08               	addlw	8
  1232  04F0  3E20               	addlw	32
  1233  04F1  0086               	movwf	6
  1234  04F2  0187               	clrf	7
  1235  04F3  1F01               	btfss	1,6
  1236  04F4  2D06               	goto	l1863
  1237                           
  1238                           ;Usb.c: 208: Interfaces[InterfaceNo + 1].Output.Stat = 0x80 | 0x08;
  1239  04F5  3088               	movlw	136
  1240  04F6  00E8               	movwf	??_ReArmInterface
  1241  04F7  086A               	movf	ReArmInterface@InterfaceNo,w
  1242  04F8  00E9               	movwf	??_ReArmInterface+1
  1243  04F9  3002               	movlw	2
  1244  04FA                     u2055:	
  1245  04FA  35E9               	lslf	??_ReArmInterface+1,f
  1246  04FB  3EFF               	addlw	-1
  1247  04FC  1D03               	skipz
  1248  04FD  2CFA               	goto	u2055
  1249  04FE  3569               	lslf	??_ReArmInterface+1,w
  1250  04FF  3E08               	addlw	8
  1251  0500  3E20               	addlw	32
  1252  0501  0086               	movwf	6
  1253  0502  0187               	clrf	7
  1254  0503  0868               	movf	??_ReArmInterface,w
  1255  0504  0081               	movwf	1
  1256  0505  0008               	return
  1257  0506                     l1863:	
  1258                           
  1259                           ;Usb.c: 209: else
  1260                           ;Usb.c: 210: Interfaces[InterfaceNo + 1].Output.Stat = 0x80 | 0x40 | 0x08;
  1261  0506  30C8               	movlw	200
  1262  0507  00E8               	movwf	??_ReArmInterface
  1263  0508  086A               	movf	ReArmInterface@InterfaceNo,w
  1264  0509  00E9               	movwf	??_ReArmInterface+1
  1265  050A  3002               	movlw	2
  1266  050B                     u2065:	
  1267  050B  35E9               	lslf	??_ReArmInterface+1,f
  1268  050C  3EFF               	addlw	-1
  1269  050D  1D03               	skipz
  1270  050E  2D0B               	goto	u2065
  1271  050F  3569               	lslf	??_ReArmInterface+1,w
  1272  0510  3E08               	addlw	8
  1273  0511  3E20               	addlw	32
  1274  0512  0086               	movwf	6
  1275  0513  0187               	clrf	7
  1276  0514  0868               	movf	??_ReArmInterface,w
  1277  0515  0081               	movwf	1
  1278  0516  0008               	return
  1279  0517                     __end_of_ReArmInterface:	
  1280                           
  1281                           	psect	text4
  1282  0685                     __ptext4:	
  1283 ;; *************** function _ProcessIncommingData *****************
  1284 ;; Defined at:
  1285 ;;		line 87 in file "Source/Main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    7
  1306 ;; This function calls:
  1307 ;;		_PrepareTxBuffer
  1308 ;; This function is called by:
  1309 ;;		_CheckUsb
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _ProcessIncommingData
  1315  0685                     _ProcessIncommingData:	
  1316                           
  1317                           ;Main.c: 89: if(HIDRxBuffer[0] == 0x80)
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _ProcessIncommingData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1321  0685  3080               	movlw	128
  1322  0686  0020               	movlb	0	; select bank0
  1323  0687  0651               	xorwf	_HIDRxBuffer,w	;volatile
  1324  0688  1D03               	btfss	3,2
  1325  0689  2E8D               	goto	l1833
  1326                           
  1327                           ;Main.c: 90: {
  1328                           ;Main.c: 92: PrepareTxBuffer();
  1329  068A  3186  2618  3186   	fcall	_PrepareTxBuffer
  1330  068D                     l1833:	
  1331                           
  1332                           ;Main.c: 93: }
  1333                           ;Main.c: 95: if(HIDRxBuffer[0] == 0x81)
  1334  068D  3081               	movlw	129
  1335  068E  0020               	movlb	0	; select bank0
  1336  068F  0651               	xorwf	_HIDRxBuffer,w	;volatile
  1337  0690  1D03               	btfss	3,2
  1338  0691  0008               	return
  1339                           
  1340                           ;Main.c: 96: {
  1341                           ;Main.c: 98: if(RC3) RC3 = 0; else RC3 = 1;
  1342  0692  1D8E               	btfss	14,3	;volatile
  1343  0693  2E96               	goto	l86
  1344  0694  118E               	bcf	14,3	;volatile
  1345  0695  2E97               	goto	l1839
  1346  0696                     l86:	
  1347  0696  158E               	bsf	14,3	;volatile
  1348  0697                     l1839:	
  1349                           
  1350                           ;Main.c: 101: PrepareTxBuffer();
  1351  0697  3186  2618         	fcall	_PrepareTxBuffer
  1352  0699  0008               	return
  1353  069A                     __end_of_ProcessIncommingData:	
  1354                           
  1355                           	psect	text5
  1356  0618                     __ptext5:	
  1357 ;; *************** function _PrepareTxBuffer *****************
  1358 ;; Defined at:
  1359 ;;		line 72 in file "Source/Main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  i               1    1[BANK0 ] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    6
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_ProcessIncommingData
  1384 ;;		_ProcessIO
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _PrepareTxBuffer
  1390  0618                     _PrepareTxBuffer:	
  1391                           
  1392                           ;Main.c: 74: BYTE i;
  1393                           ;Main.c: 76: HIDTxBuffer[0] = 0x80;
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _PrepareTxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1397  0618  3080               	movlw	128
  1398  0619  0020               	movlb	0	; select bank0
  1399  061A  00E8               	movwf	??_PrepareTxBuffer
  1400  061B  0868               	movf	??_PrepareTxBuffer,w
  1401  061C  00D9               	movwf	_HIDTxBuffer	;volatile
  1402                           
  1403                           ;Main.c: 77: HIDTxBuffer[1] = RC2;
  1404  061D  3000               	movlw	0
  1405  061E  190E               	btfsc	14,2	;volatile
  1406  061F  3001               	movlw	1
  1407  0620  00DA               	movwf	_HIDTxBuffer+1	;volatile
  1408                           
  1409                           ;Main.c: 78: HIDTxBuffer[2] = RC3;
  1410  0621  3000               	movlw	0
  1411  0622  198E               	btfsc	14,3	;volatile
  1412  0623  3001               	movlw	1
  1413  0624  00DB               	movwf	_HIDTxBuffer+2	;volatile
  1414                           
  1415                           ;Main.c: 81: for(i = 3 ; i < 0x08; i++)
  1416  0625  3003               	movlw	3
  1417  0626  00E8               	movwf	??_PrepareTxBuffer
  1418  0627  0868               	movf	??_PrepareTxBuffer,w
  1419  0628  00E9               	movwf	PrepareTxBuffer@i
  1420  0629                     L1:	
  1421  0629  3008               	movlw	8
  1422  062A  0269               	subwf	PrepareTxBuffer@i,w
  1423  062B  1803               	btfsc	3,0
  1424  062C  0008               	return
  1425                           
  1426                           ;Main.c: 82: {
  1427                           ;Main.c: 83: HIDTxBuffer[i] = 0x00;
  1428  062D  0869               	movf	PrepareTxBuffer@i,w
  1429  062E  3E59               	addlw	(low (_HIDTxBuffer| 0))& (0+255)
  1430  062F  0086               	movwf	6
  1431  0630  0187               	clrf	7
  1432  0631  0181               	clrf	1
  1433  0632  3001               	movlw	1
  1434  0633  00E8               	movwf	??_PrepareTxBuffer
  1435  0634  0868               	movf	??_PrepareTxBuffer,w
  1436  0635  07E9               	addwf	PrepareTxBuffer@i,f
  1437  0636  2E29               	goto	L1
  1438  0637                     __end_of_PrepareTxBuffer:	
  1439                           
  1440                           	psect	text6
  1441  05F3                     __ptext6:	
  1442 ;; *************** function _IsUsbDataAvaialble *****************
  1443 ;; Defined at:
  1444 ;;		line 184 in file "Source/Usb.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  InterfaceNo     1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  InterfaceNo     1    1[BANK0 ] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;Total ram usage:        2 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    6
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_CheckUsb
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _IsUsbDataAvaialble
  1474  05F3                     _IsUsbDataAvaialble:	
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _IsUsbDataAvaialble: [wreg+fsr1l+fsr1h+status,2+status,0]
  1478                           ;IsUsbDataAvaialble@InterfaceNo stored from wreg
  1479  05F3  0020               	movlb	0	; select bank0
  1480  05F4  00E9               	movwf	IsUsbDataAvaialble@InterfaceNo
  1481                           
  1482                           ;Usb.c: 186: if(InterfaceNo >= 0x01) return 0;
  1483  05F5  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1484  05F6  1903               	btfsc	3,2
  1485  05F7  2DFA               	goto	l1847
  1486  05F8  3000               	movlw	0
  1487  05F9  0008               	return
  1488  05FA                     l1847:	
  1489                           
  1490                           ;Usb.c: 187: if(!(Interfaces[InterfaceNo + 1].Output.Stat & 0x80))
  1491  05FA  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1492  05FB  00E8               	movwf	??_IsUsbDataAvaialble
  1493  05FC  3002               	movlw	2
  1494  05FD                     u1975:	
  1495  05FD  35E8               	lslf	??_IsUsbDataAvaialble,f
  1496  05FE  3EFF               	addlw	-1
  1497  05FF  1D03               	skipz
  1498  0600  2DFD               	goto	u1975
  1499  0601  3568               	lslf	??_IsUsbDataAvaialble,w
  1500  0602  3E08               	addlw	8
  1501  0603  3E20               	addlw	32
  1502  0604  0086               	movwf	6
  1503  0605  0187               	clrf	7
  1504  0606  1B81               	btfsc	1,7
  1505  0607  2E16               	goto	l1853
  1506                           
  1507                           ;Usb.c: 188: {
  1508                           ;Usb.c: 189: return Interfaces[InterfaceNo + 1].Output.Cnt;
  1509  0608  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1510  0609  00E8               	movwf	??_IsUsbDataAvaialble
  1511  060A  3002               	movlw	2
  1512  060B                     u1995:	
  1513  060B  35E8               	lslf	??_IsUsbDataAvaialble,f
  1514  060C  3EFF               	addlw	-1
  1515  060D  1D03               	skipz
  1516  060E  2E0B               	goto	u1995
  1517  060F  3568               	lslf	??_IsUsbDataAvaialble,w
  1518  0610  3E09               	addlw	9
  1519  0611  3E20               	addlw	32
  1520  0612  0086               	movwf	6
  1521  0613  0187               	clrf	7
  1522  0614  0801               	movf	1,w
  1523  0615  0008               	return
  1524  0616                     l1853:	
  1525                           
  1526                           ;Usb.c: 190: }
  1527                           ;Usb.c: 191: return 0;
  1528  0616  3000               	movlw	0
  1529  0617  0008               	return
  1530  0618                     __end_of_IsUsbDataAvaialble:	
  1531                           
  1532                           	psect	text7
  1533  0517                     __ptext7:	
  1534 ;; *************** function _HIDSend *****************
  1535 ;; Defined at:
  1536 ;;		line 214 in file "Source/Usb.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  InterfaceNo     1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  InterfaceNo     1    2[BANK0 ] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;		None               void
  1543 ;; Registers used:
  1544 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    6
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_CheckUsb
  1561 ;;		_ProcessIO
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _HIDSend
  1567  0517                     _HIDSend:	
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _HIDSend: [wreg+fsr1l+fsr1h+status,2+status,0]
  1571                           ;HIDSend@InterfaceNo stored from wreg
  1572  0517  0020               	movlb	0	; select bank0
  1573  0518  00EA               	movwf	HIDSend@InterfaceNo
  1574                           
  1575                           ;Usb.c: 217: if (Interfaces[InterfaceNo + 1].Input.Stat & 0x80) return;
  1576  0519  086A               	movf	HIDSend@InterfaceNo,w
  1577  051A  00E8               	movwf	??_HIDSend
  1578  051B  3002               	movlw	2
  1579  051C                     u2075:	
  1580  051C  35E8               	lslf	??_HIDSend,f
  1581  051D  3EFF               	addlw	-1
  1582  051E  1D03               	skipz
  1583  051F  2D1C               	goto	u2075
  1584  0520  3568               	lslf	??_HIDSend,w
  1585  0521  3E0C               	addlw	12
  1586  0522  3E20               	addlw	32
  1587  0523  0086               	movwf	6
  1588  0524  0187               	clrf	7
  1589  0525  1B81               	btfsc	1,7
  1590  0526  0008               	return
  1591                           
  1592                           ;Usb.c: 221: Interfaces[InterfaceNo + 1].Input.Cnt = Buffers[InterfaceNo * 2].Size;
  1593  0527  356A               	lslf	HIDSend@InterfaceNo,w
  1594  0528  0709               	addwf	9,w
  1595  0529  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  1596  052A  0086               	movwf	6
  1597  052B  0187               	clrf	7
  1598  052C  0801               	movf	1,w
  1599  052D  00E8               	movwf	??_HIDSend
  1600  052E  086A               	movf	HIDSend@InterfaceNo,w
  1601  052F  00E9               	movwf	??_HIDSend+1
  1602  0530  3002               	movlw	2
  1603  0531                     u2095:	
  1604  0531  35E9               	lslf	??_HIDSend+1,f
  1605  0532  3EFF               	addlw	-1
  1606  0533  1D03               	skipz
  1607  0534  2D31               	goto	u2095
  1608  0535  3569               	lslf	??_HIDSend+1,w
  1609  0536  3E0D               	addlw	13
  1610  0537  3E20               	addlw	32
  1611  0538  0086               	movwf	6
  1612  0539  0187               	clrf	7
  1613  053A  0868               	movf	??_HIDSend,w
  1614  053B  0081               	movwf	1
  1615                           
  1616                           ;Usb.c: 223: if(Interfaces[InterfaceNo + 1].Input.Stat & 0x40)
  1617  053C  086A               	movf	HIDSend@InterfaceNo,w
  1618  053D  00E8               	movwf	??_HIDSend
  1619  053E  3002               	movlw	2
  1620  053F                     u2105:	
  1621  053F  35E8               	lslf	??_HIDSend,f
  1622  0540  3EFF               	addlw	-1
  1623  0541  1D03               	skipz
  1624  0542  2D3F               	goto	u2105
  1625  0543  3568               	lslf	??_HIDSend,w
  1626  0544  3E0C               	addlw	12
  1627  0545  3E20               	addlw	32
  1628  0546  0086               	movwf	6
  1629  0547  0187               	clrf	7
  1630  0548  1F01               	btfss	1,6
  1631  0549  2D5B               	goto	l1873
  1632                           
  1633                           ;Usb.c: 224: Interfaces[InterfaceNo + 1].Input.Stat = 0x80 | 0x08;
  1634  054A  3088               	movlw	136
  1635  054B  00E8               	movwf	??_HIDSend
  1636  054C  086A               	movf	HIDSend@InterfaceNo,w
  1637  054D  00E9               	movwf	??_HIDSend+1
  1638  054E  3002               	movlw	2
  1639  054F                     u2125:	
  1640  054F  35E9               	lslf	??_HIDSend+1,f
  1641  0550  3EFF               	addlw	-1
  1642  0551  1D03               	skipz
  1643  0552  2D4F               	goto	u2125
  1644  0553  3569               	lslf	??_HIDSend+1,w
  1645  0554  3E0C               	addlw	12
  1646  0555  3E20               	addlw	32
  1647  0556  0086               	movwf	6
  1648  0557  0187               	clrf	7
  1649  0558  0868               	movf	??_HIDSend,w
  1650  0559  0081               	movwf	1
  1651  055A  0008               	return
  1652  055B                     l1873:	
  1653                           
  1654                           ;Usb.c: 225: else
  1655                           ;Usb.c: 226: Interfaces[InterfaceNo + 1].Input.Stat = 0x80 | 0x40 | 0x08;
  1656  055B  30C8               	movlw	200
  1657  055C  00E8               	movwf	??_HIDSend
  1658  055D  086A               	movf	HIDSend@InterfaceNo,w
  1659  055E  00E9               	movwf	??_HIDSend+1
  1660  055F  3002               	movlw	2
  1661  0560                     u2135:	
  1662  0560  35E9               	lslf	??_HIDSend+1,f
  1663  0561  3EFF               	addlw	-1
  1664  0562  1D03               	skipz
  1665  0563  2D60               	goto	u2135
  1666  0564  3569               	lslf	??_HIDSend+1,w
  1667  0565  3E0C               	addlw	12
  1668  0566  3E20               	addlw	32
  1669  0567  0086               	movwf	6
  1670  0568  0187               	clrf	7
  1671  0569  0868               	movf	??_HIDSend,w
  1672  056A  0081               	movwf	1
  1673  056B  0008               	return
  1674  056C                     __end_of_HIDSend:	
  1675                           
  1676                           	psect	text8
  1677  06D0                     __ptext8:	
  1678 ;; *************** function _InitializeUSB *****************
  1679 ;; Defined at:
  1680 ;;		line 760 in file "Source/Usb.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;		None               void
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    7
  1701 ;; This function calls:
  1702 ;;		_ResetPPBuffers
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _InitializeUSB
  1710  06D0                     _InitializeUSB:	
  1711                           
  1712                           ;Usb.c: 762: UCFG = 0x14;
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _InitializeUSB: [wreg+status,2+status,0+pclath+cstack]
  1716  06D0  3014               	movlw	20
  1717  06D1  003D               	movlb	29	; select bank29
  1718  06D2  0091               	movwf	17	;volatile
  1719                           
  1720                           ;Usb.c: 763: DeviceState = 0x00;
  1721  06D3  0020               	movlb	0	; select bank0
  1722  06D4  01B7               	clrf	_DeviceState
  1723                           
  1724                           ;Usb.c: 764: RemoteWakeup = 0x00;
  1725  06D5  01BA               	clrf	_RemoteWakeup
  1726                           
  1727                           ;Usb.c: 765: CurrentConfiguration = 0x00;
  1728  06D6  01E1               	clrf	_CurrentConfiguration
  1729                           
  1730                           ;Usb.c: 766: UADDR = 0;
  1731  06D7  003D               	movlb	29	; select bank29
  1732  06D8  0196               	clrf	22	;volatile
  1733                           
  1734                           ;Usb.c: 767: UEIR = 0;
  1735  06D9  0193               	clrf	19	;volatile
  1736                           
  1737                           ;Usb.c: 768: ResetPPBuffers();
  1738  06DA  3187  2718         	fcall	_ResetPPBuffers
  1739                           
  1740                           ;Usb.c: 769: UCONbits.PKTDIS = 0;
  1741  06DC  003D               	movlb	29	; select bank29
  1742  06DD  120E               	bcf	14,4	;volatile
  1743  06DE  0008               	return
  1744  06DF                     __end_of_InitializeUSB:	
  1745                           
  1746                           	psect	text9
  1747  0718                     __ptext9:	
  1748 ;; *************** function _ResetPPBuffers *****************
  1749 ;; Defined at:
  1750 ;;		line 751 in file "Source/Usb.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;		None               void
  1757 ;; Registers used:
  1758 ;;		None
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    6
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_InitializeUSB
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _ResetPPBuffers
  1780  0718                     _ResetPPBuffers:	
  1781                           
  1782                           ;Usb.c: 754: {
  1783                           ;Usb.c: 755: UCONbits.PPBRST = 1;
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _ResetPPBuffers: []
  1787                           ;Usb.c: 753: do
  1788  0718  003D               	movlb	29	; select bank29
  1789  0719  170E               	bsf	14,6	;volatile
  1790                           
  1791                           ;Usb.c: 756: UCONbits.PPBRST = 0;
  1792  071A  130E               	bcf	14,6	;volatile
  1793  071B  0008               	return
  1794  071C                     __end_of_ResetPPBuffers:	
  1795                           
  1796                           	psect	text10
  1797  069A                     __ptext10:	
  1798 ;; *************** function _InitializeSystem *****************
  1799 ;; Defined at:
  1800 ;;		line 48 in file "Source/Main.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, status,2
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    6
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _InitializeSystem
  1830  069A                     _InitializeSystem:	
  1831                           
  1832                           ;Main.c: 50: ANSELA = 0x00;
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _InitializeSystem: [wreg+status,2]
  1836  069A  0023               	movlb	3	; select bank3
  1837  069B  018C               	clrf	12	;volatile
  1838                           
  1839                           ;Main.c: 51: ANSELC = 0x00;
  1840  069C  018E               	clrf	14	;volatile
  1841                           
  1842                           ;Main.c: 52: OSCTUNE = 0x00;
  1843  069D  0021               	movlb	1	; select bank1
  1844  069E  0198               	clrf	24	;volatile
  1845                           
  1846                           ;Main.c: 53: OSCCON = 0xFC;
  1847  069F  30FC               	movlw	252
  1848  06A0  0099               	movwf	25	;volatile
  1849                           
  1850                           ;Main.c: 54: ACTCON = 0x90;
  1851  06A1  3090               	movlw	144
  1852  06A2  0027               	movlb	7	; select bank7
  1853  06A3  009B               	movwf	27	;volatile
  1854                           
  1855                           ;Main.c: 55: OPTION_REG = 0xC3;
  1856  06A4  30C3               	movlw	195
  1857  06A5  0021               	movlb	1	; select bank1
  1858  06A6  0095               	movwf	21	;volatile
  1859                           
  1860                           ;Main.c: 57: TRISC = 0b00000100;
  1861  06A7  3004               	movlw	4
  1862  06A8  008E               	movwf	14	;volatile
  1863                           
  1864                           ;Main.c: 58: LATC = 0b00000000;
  1865  06A9  0022               	movlb	2	; select bank2
  1866  06AA  018E               	clrf	14	;volatile
  1867                           
  1868                           ;Main.c: 60: ButtonStatus = 0;
  1869  06AB  0020               	movlb	0	; select bank0
  1870  06AC  01B4               	clrf	_ButtonStatus
  1871  06AD  0008               	return
  1872  06AE                     __end_of_InitializeSystem:	
  1873                           
  1874                           	psect	text11
  1875  066F                     __ptext11:	
  1876 ;; *************** function _EnableUSBModule *****************
  1877 ;; Defined at:
  1878 ;;		line 772 in file "Source/Usb.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;		None               void
  1885 ;; Registers used:
  1886 ;;		wreg, status,2
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;Total ram usage:        1 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    6
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _EnableUSBModule
  1908  066F                     _EnableUSBModule:	
  1909                           
  1910                           ;Usb.c: 776: if(UCONbits.USBEN == 0)
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _EnableUSBModule: [wreg+status,2]
  1914  066F  003D               	movlb	29	; select bank29
  1915  0670  198E               	btfsc	14,3	;volatile
  1916  0671  2E78               	goto	l368
  1917                           
  1918                           ;Usb.c: 777: {
  1919                           ;Usb.c: 778: UCON = 0;
  1920  0672  018E               	clrf	14	;volatile
  1921                           
  1922                           ;Usb.c: 779: UIE = 0;
  1923  0673  0192               	clrf	18	;volatile
  1924                           
  1925                           ;Usb.c: 780: UCONbits.USBEN = 1;
  1926  0674  158E               	bsf	14,3	;volatile
  1927                           
  1928                           ;Usb.c: 781: DeviceState = 0x01;
  1929  0675  0020               	movlb	0	; select bank0
  1930  0676  01B7               	clrf	_DeviceState
  1931  0677  0AB7               	incf	_DeviceState,f
  1932  0678                     l368:	
  1933                           ;Usb.c: 782: }
  1934                           ;Usb.c: 784: while (UCONbits.SE0);
  1935                           
  1936  0678  003D               	movlb	29	; select bank29
  1937  0679  1A8E               	btfsc	14,5	;volatile
  1938  067A  2E78               	goto	l368
  1939                           
  1940                           ;Usb.c: 788: UIR = 0;
  1941  067B  0190               	clrf	16	;volatile
  1942                           
  1943                           ;Usb.c: 789: UIE = 0;
  1944  067C  0192               	clrf	18	;volatile
  1945                           
  1946                           ;Usb.c: 790: UIEbits.URSTIE = 1;
  1947  067D  1412               	bsf	18,0	;volatile
  1948                           
  1949                           ;Usb.c: 791: UIEbits.IDLEIE = 1;
  1950  067E  1612               	bsf	18,4	;volatile
  1951                           
  1952                           ;Usb.c: 792: DeviceState = 0x02;
  1953  067F  3002               	movlw	2
  1954  0680  0020               	movlb	0	; select bank0
  1955  0681  00E8               	movwf	??_EnableUSBModule
  1956  0682  0868               	movf	??_EnableUSBModule,w
  1957  0683  00B7               	movwf	_DeviceState
  1958  0684  0008               	return
  1959  0685                     __end_of_EnableUSBModule:	
  1960                           
  1961                           	psect	text12
  1962  06F6                     __ptext12:	
  1963 ;; *************** function _EnableInterrupts *****************
  1964 ;; Defined at:
  1965 ;;		line 63 in file "Source/Main.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;		None               void
  1972 ;; Registers used:
  1973 ;;		wreg
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    6
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _EnableInterrupts
  1995  06F6                     _EnableInterrupts:	
  1996                           
  1997                           ;Main.c: 65: UIE = 0x4B;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _EnableInterrupts: [wreg]
  2001  06F6  304B               	movlw	75
  2002  06F7  003D               	movlb	29	; select bank29
  2003  06F8  0092               	movwf	18	;volatile
  2004                           
  2005                           ;Main.c: 66: INTCONbits.PEIE = 1;
  2006  06F9  170B               	bsf	11,6	;volatile
  2007                           
  2008                           ;Main.c: 67: INTCONbits.GIE = 1;
  2009  06FA  178B               	bsf	11,7	;volatile
  2010                           
  2011                           ;Main.c: 68: PIE2bits.USBIE = 1;
  2012  06FB  0021               	movlb	1	; select bank1
  2013  06FC  1512               	bsf	18,2	;volatile
  2014  06FD  0008               	return
  2015  06FE                     __end_of_EnableInterrupts:	
  2016                           
  2017                           	psect	intentry
  2018  0004                     __pintentry:	
  2019 ;; *************** function _ISRCode *****************
  2020 ;; Defined at:
  2021 ;;		line 43 in file "Source/Main.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;Total ram usage:        1 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    5
  2042 ;; This function calls:
  2043 ;;		_ProcessUSBTransactions
  2044 ;; This function is called by:
  2045 ;;		Interrupt level 1
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049  0004                     _ISRCode:	
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2053  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2054  0005  3180               	pagesel	$
  2055  0006  0020               	movlb	0	; select bank0
  2056  0007  087F               	movf	127,w
  2057  0008  00FD               	movwf	??_ISRCode
  2058                           
  2059                           ;Main.c: 45: if (PIR2bits.USBIF) ProcessUSBTransactions();
  2060  0009  1D12               	btfss	18,2	;volatile
  2061  000A  280D               	goto	i1l70
  2062  000B  3182  22E1         	fcall	_ProcessUSBTransactions
  2063  000D                     i1l70:	
  2064  000D  087D               	movf	??_ISRCode,w
  2065  000E  0020               	movlb	0	; select bank0
  2066  000F  00FF               	movwf	127
  2067  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2068  0011  0009               	retfie
  2069  0012                     __end_of_ISRCode:	
  2070                           
  2071                           	psect	text14
  2072  02E1                     __ptext14:	
  2073 ;; *************** function _ProcessUSBTransactions *****************
  2074 ;; Defined at:
  2075 ;;		line 858 in file "Source/Usb.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;		None               void
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    4
  2096 ;; This function calls:
  2097 ;;		_BusReset
  2098 ;;		_ProcessControlTransfer
  2099 ;;		_Stall
  2100 ;;		_StartOfFrame
  2101 ;;		_Suspend
  2102 ;;		_UnSuspend
  2103 ;; This function is called by:
  2104 ;;		_ISRCode
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function _ProcessUSBTransactions
  2110  02E1                     _ProcessUSBTransactions:	
  2111                           
  2112                           ;Usb.c: 861: if(DeviceState == 0x00)
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _ProcessUSBTransactions: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2116  02E1  0020               	movlb	0	; select bank0
  2117  02E2  0837               	movf	_DeviceState,w
  2118  02E3  1D03               	btfss	3,2
  2119  02E4  2AEA               	goto	i1l393
  2120                           
  2121                           ;Usb.c: 862: {
  2122                           ;Usb.c: 863: UIR = 0;
  2123  02E5  003D               	movlb	29	; select bank29
  2124  02E6  0190               	clrf	16	;volatile
  2125                           
  2126                           ;Usb.c: 864: PIR2bits.USBIF = 0;
  2127  02E7  0020               	movlb	0	; select bank0
  2128  02E8  1112               	bcf	18,2	;volatile
  2129                           
  2130                           ;Usb.c: 865: return;
  2131  02E9  0008               	return
  2132  02EA                     i1l393:	
  2133                           
  2134                           ;Usb.c: 866: }
  2135                           ;Usb.c: 869: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2136  02EA  003D               	movlb	29	; select bank29
  2137  02EB  1910               	btfsc	16,2	;volatile
  2138  02EC  1D12               	btfss	18,2	;volatile
  2139  02ED  2AF6               	goto	i1l2053
  2140                           
  2141                           ;Usb.c: 870: {
  2142                           ;Usb.c: 871: UnSuspend();
  2143  02EE  3186  26FE  3182   	fcall	_UnSuspend
  2144                           
  2145                           ;Usb.c: 872: UIR &= ~(0x04);
  2146  02F1  30FB               	movlw	251
  2147  02F2  00FC               	movwf	??_ProcessUSBTransactions
  2148  02F3  087C               	movf	??_ProcessUSBTransactions,w
  2149  02F4  003D               	movlb	29	; select bank29
  2150  02F5  0590               	andwf	16,f	;volatile
  2151  02F6                     i1l2053:	
  2152                           
  2153                           ;Usb.c: 873: }
  2154                           ;Usb.c: 877: if(UCONbits.SUSPND == 1)
  2155  02F6  1C8E               	btfss	14,1	;volatile
  2156  02F7  2AFC               	goto	i1l396
  2157                           
  2158                           ;Usb.c: 878: {
  2159                           ;Usb.c: 879: UIR = 0;
  2160  02F8  0190               	clrf	16	;volatile
  2161                           
  2162                           ;Usb.c: 880: PIR2bits.USBIF = 0;
  2163  02F9  0020               	movlb	0	; select bank0
  2164  02FA  1112               	bcf	18,2	;volatile
  2165                           
  2166                           ;Usb.c: 881: return;
  2167  02FB  0008               	return
  2168  02FC                     i1l396:	
  2169                           
  2170                           ;Usb.c: 882: }
  2171                           ;Usb.c: 885: if (UIRbits.URSTIF && UIEbits.URSTIE)
  2172  02FC  1810               	btfsc	16,0	;volatile
  2173  02FD  1C12               	btfss	18,0	;volatile
  2174  02FE  2B07               	goto	i1l2067
  2175                           
  2176                           ;Usb.c: 886: {
  2177                           ;Usb.c: 887: BusReset();
  2178  02FF  3186  2655  3182   	fcall	_BusReset
  2179                           
  2180                           ;Usb.c: 888: UIR &= ~(0x01);
  2181  0302  30FE               	movlw	254
  2182  0303  00FC               	movwf	??_ProcessUSBTransactions
  2183  0304  087C               	movf	??_ProcessUSBTransactions,w
  2184  0305  003D               	movlb	29	; select bank29
  2185  0306  0590               	andwf	16,f	;volatile
  2186  0307                     i1l2067:	
  2187                           
  2188                           ;Usb.c: 889: }
  2189                           ;Usb.c: 891: if (UIRbits.IDLEIF && UIEbits.IDLEIE)
  2190  0307  1A10               	btfsc	16,4	;volatile
  2191  0308  1E12               	btfss	18,4	;volatile
  2192  0309  2B12               	goto	i1l2075
  2193                           
  2194                           ;Usb.c: 892: {
  2195                           ;Usb.c: 894: Suspend();
  2196  030A  3187  2706  3182   	fcall	_Suspend
  2197                           
  2198                           ;Usb.c: 895: UIR &= ~(0x10);
  2199  030D  30EF               	movlw	239
  2200  030E  00FC               	movwf	??_ProcessUSBTransactions
  2201  030F  087C               	movf	??_ProcessUSBTransactions,w
  2202  0310  003D               	movlb	29	; select bank29
  2203  0311  0590               	andwf	16,f	;volatile
  2204  0312                     i1l2075:	
  2205                           
  2206                           ;Usb.c: 896: }
  2207                           ;Usb.c: 898: if (UIRbits.SOFIF && UIEbits.SOFIE)
  2208  0312  1B10               	btfsc	16,6	;volatile
  2209  0313  1F12               	btfss	18,6	;volatile
  2210  0314  2B1D               	goto	i1l2083
  2211                           
  2212                           ;Usb.c: 899: {
  2213                           ;Usb.c: 900: StartOfFrame();
  2214  0315  3187  271C  3182   	fcall	_StartOfFrame
  2215                           
  2216                           ;Usb.c: 901: UIR &= ~(0x40);
  2217  0318  30BF               	movlw	191
  2218  0319  00FC               	movwf	??_ProcessUSBTransactions
  2219  031A  087C               	movf	??_ProcessUSBTransactions,w
  2220  031B  003D               	movlb	29	; select bank29
  2221  031C  0590               	andwf	16,f	;volatile
  2222  031D                     i1l2083:	
  2223                           
  2224                           ;Usb.c: 902: }
  2225                           ;Usb.c: 904: if (UIRbits.STALLIF && UIEbits.STALLIE)
  2226  031D  1A90               	btfsc	16,5	;volatile
  2227  031E  1E92               	btfss	18,5	;volatile
  2228  031F  2B28               	goto	i1l2091
  2229                           
  2230                           ;Usb.c: 905: {
  2231                           ;Usb.c: 906: Stall();
  2232  0320  3186  26ED  3182   	fcall	_Stall
  2233                           
  2234                           ;Usb.c: 907: UIR &= ~(0x20);
  2235  0323  30DF               	movlw	223
  2236  0324  00FC               	movwf	??_ProcessUSBTransactions
  2237  0325  087C               	movf	??_ProcessUSBTransactions,w
  2238  0326  003D               	movlb	29	; select bank29
  2239  0327  0590               	andwf	16,f	;volatile
  2240  0328                     i1l2091:	
  2241                           
  2242                           ;Usb.c: 908: }
  2243                           ;Usb.c: 910: if (UIRbits.UERRIF && UIEbits.UERRIE)
  2244  0328  1890               	btfsc	16,1	;volatile
  2245  0329  1C92               	btfss	18,1	;volatile
  2246  032A  2B31               	goto	i1l2101
  2247                           
  2248                           ;Usb.c: 911: {
  2249                           ;Usb.c: 914: UIRbits.UERRIF = 0;
  2250  032B  1090               	bcf	16,1	;volatile
  2251                           
  2252                           ;Usb.c: 915: UEIR = 0 ;
  2253  032C  0193               	clrf	19	;volatile
  2254                           
  2255                           ;Usb.c: 916: UIR &= ~(0x02);
  2256  032D  30FD               	movlw	253
  2257  032E  00FC               	movwf	??_ProcessUSBTransactions
  2258  032F  087C               	movf	??_ProcessUSBTransactions,w
  2259  0330  0590               	andwf	16,f	;volatile
  2260  0331                     i1l2101:	
  2261                           
  2262                           ;Usb.c: 917: }
  2263                           ;Usb.c: 920: if (DeviceState < 0x03)
  2264  0331  3003               	movlw	3
  2265  0332  0020               	movlb	0	; select bank0
  2266  0333  0237               	subwf	_DeviceState,w
  2267  0334  1803               	skipnc
  2268  0335  2B3B               	goto	i1l402
  2269                           
  2270                           ;Usb.c: 921: {
  2271                           ;Usb.c: 922: UIR = 0;
  2272  0336  003D               	movlb	29	; select bank29
  2273  0337  0190               	clrf	16	;volatile
  2274                           
  2275                           ;Usb.c: 923: PIR2bits.USBIF = 0;
  2276  0338  0020               	movlb	0	; select bank0
  2277  0339  1112               	bcf	18,2	;volatile
  2278                           
  2279                           ;Usb.c: 924: return;
  2280  033A  0008               	return
  2281  033B                     i1l402:	
  2282                           
  2283                           ;Usb.c: 925: }
  2284                           ;Usb.c: 928: if(UIRbits.TRNIF && UIEbits.TRNIE)
  2285  033B  003D               	movlb	29	; select bank29
  2286  033C  1990               	btfsc	16,3	;volatile
  2287  033D  1D92               	btfss	18,3	;volatile
  2288  033E  2B46               	goto	i1l2115
  2289                           
  2290                           ;Usb.c: 929: {
  2291                           ;Usb.c: 930: ProcessControlTransfer();
  2292  033F  3184  240A         	fcall	_ProcessControlTransfer
  2293                           
  2294                           ;Usb.c: 931: UIR &= ~(0x08);
  2295  0341  30F7               	movlw	247
  2296  0342  00FC               	movwf	??_ProcessUSBTransactions
  2297  0343  087C               	movf	??_ProcessUSBTransactions,w
  2298  0344  003D               	movlb	29	; select bank29
  2299  0345  0590               	andwf	16,f	;volatile
  2300  0346                     i1l2115:	
  2301                           
  2302                           ;Usb.c: 932: }
  2303                           ;Usb.c: 933: PIR2bits.USBIF = 0;
  2304  0346  0020               	movlb	0	; select bank0
  2305  0347  1112               	bcf	18,2	;volatile
  2306  0348  0008               	return
  2307  0349                     __end_of_ProcessUSBTransactions:	
  2308                           
  2309                           	psect	text15
  2310  06FE                     __ptext15:	
  2311 ;; *************** function _UnSuspend *****************
  2312 ;; Defined at:
  2313 ;;		line 796 in file "Source/Usb.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_ProcessUSBTransactions
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _UnSuspend
  2342  06FE                     _UnSuspend:	
  2343                           
  2344                           ;Usb.c: 798: UCONbits.SUSPND = 0;
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _UnSuspend: [wreg+status,2+status,0]
  2348  06FE  003D               	movlb	29	; select bank29
  2349  06FF  108E               	bcf	14,1	;volatile
  2350                           
  2351                           ;Usb.c: 799: UIEbits.ACTVIE = 0;
  2352  0700  1112               	bcf	18,2	;volatile
  2353                           
  2354                           ;Usb.c: 800: UIR &= 0xFB;
  2355  0701  30FB               	movlw	251
  2356  0702  00F0               	movwf	??_UnSuspend
  2357  0703  0870               	movf	??_UnSuspend,w
  2358  0704  0590               	andwf	16,f	;volatile
  2359  0705  0008               	return
  2360  0706                     __end_of_UnSuspend:	
  2361                           
  2362                           	psect	text16
  2363  0706                     __ptext16:	
  2364 ;; *************** function _Suspend *****************
  2365 ;; Defined at:
  2366 ;;		line 824 in file "Source/Usb.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_ProcessUSBTransactions
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _Suspend
  2395  0706                     _Suspend:	
  2396                           
  2397                           ;Usb.c: 826: UIEbits.ACTVIE = 1;
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _Suspend: [wreg+status,2+status,0]
  2401  0706  003D               	movlb	29	; select bank29
  2402  0707  1512               	bsf	18,2	;volatile
  2403                           
  2404                           ;Usb.c: 827: UIR &= 0xEF;
  2405  0708  30EF               	movlw	239
  2406  0709  00F0               	movwf	??_Suspend
  2407  070A  0870               	movf	??_Suspend,w
  2408  070B  0590               	andwf	16,f	;volatile
  2409                           
  2410                           ;Usb.c: 828: UCONbits.SUSPND = 1;
  2411  070C  148E               	bsf	14,1	;volatile
  2412  070D  0008               	return
  2413  070E                     __end_of_Suspend:	
  2414                           
  2415                           	psect	text17
  2416  071C                     __ptext17:	
  2417 ;; *************** function _StartOfFrame *****************
  2418 ;; Defined at:
  2419 ;;		line 805 in file "Source/Usb.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		None
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_ProcessUSBTransactions
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _StartOfFrame
  2448  071C                     _StartOfFrame:	
  2449                           
  2450                           ;Usb.c: 808: UIRbits.SOFIF = 0;
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _StartOfFrame: []
  2454  071C  003D               	movlb	29	; select bank29
  2455  071D  1310               	bcf	16,6	;volatile
  2456  071E  0008               	return
  2457  071F                     __end_of_StartOfFrame:	
  2458                           
  2459                           	psect	text18
  2460  06ED                     __ptext18:	
  2461 ;; *************** function _Stall *****************
  2462 ;; Defined at:
  2463 ;;		line 812 in file "Source/Usb.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		_WaitForSetupStage
  2486 ;; This function is called by:
  2487 ;;		_ProcessUSBTransactions
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _Stall
  2493  06ED                     _Stall:	
  2494                           
  2495                           ;Usb.c: 814: if(UEP0bits.EPSTALL == 1)
  2496                           
  2497                           ;incstack = 0
  2498                           ; Regs used in _Stall: [wreg+status,2+status,0+pclath+cstack]
  2499  06ED  003D               	movlb	29	; select bank29
  2500  06EE  1C18               	btfss	24,0	;volatile
  2501  06EF  2EF4               	goto	i1l2013
  2502                           
  2503                           ;Usb.c: 815: {
  2504                           ;Usb.c: 817: WaitForSetupStage();
  2505  06F0  3186  26DF         	fcall	_WaitForSetupStage
  2506                           
  2507                           ;Usb.c: 818: UEP0bits.EPSTALL = 0;
  2508  06F2  003D               	movlb	29	; select bank29
  2509  06F3  1018               	bcf	24,0	;volatile
  2510  06F4                     i1l2013:	
  2511                           
  2512                           ;Usb.c: 819: }
  2513                           ;Usb.c: 820: UIRbits.STALLIF = 0;
  2514  06F4  1290               	bcf	16,5	;volatile
  2515  06F5  0008               	return
  2516  06F6                     __end_of_Stall:	
  2517                           
  2518                           	psect	text19
  2519  040A                     __ptext19:	
  2520 ;; *************** function _ProcessControlTransfer *****************
  2521 ;; Defined at:
  2522 ;;		line 691 in file "Source/Usb.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  PID             1   11[COMMON] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;		None               void
  2529 ;; Registers used:
  2530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2539 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;Total ram usage:        3 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    3
  2543 ;; This function calls:
  2544 ;;		_InDataStage
  2545 ;;		_OutDataStage
  2546 ;;		_SetupStage
  2547 ;;		_WaitForSetupStage
  2548 ;; This function is called by:
  2549 ;;		_ProcessUSBTransactions
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _ProcessControlTransfer
  2555  040A                     _ProcessControlTransfer:	
  2556                           
  2557                           ;Usb.c: 693: if (USTAT == 0)
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _ProcessControlTransfer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2561  040A  003D               	movlb	29	; select bank29
  2562  040B  080F               	movf	15,w	;volatile
  2563  040C  1D03               	btfss	3,2
  2564  040D  2C38               	goto	i1l1977
  2565                           
  2566                           ;Usb.c: 694: {
  2567                           ;Usb.c: 696: BYTE PID = (Interfaces[0].Output.Stat & 0x3C) >> 2;
  2568  040E  0020               	movlb	0	; select bank0
  2569  040F  0820               	movf	32,w	;volatile
  2570  0410  00F9               	movwf	??_ProcessControlTransfer
  2571  0411  3002               	movlw	2
  2572  0412                     u220_25:	
  2573  0412  36F9               	lsrf	??_ProcessControlTransfer,f
  2574  0413  0B89               	decfsz	9,f
  2575  0414  2C12               	goto	u220_25
  2576  0415  0879               	movf	??_ProcessControlTransfer,w
  2577  0416  390F               	andlw	15
  2578  0417  00FA               	movwf	??_ProcessControlTransfer+1
  2579  0418  087A               	movf	??_ProcessControlTransfer+1,w
  2580  0419  00FB               	movwf	ProcessControlTransfer@PID
  2581                           
  2582                           ;Usb.c: 697: if (PID == 0x0D)
  2583  041A  300D               	movlw	13
  2584  041B  067B               	xorwf	ProcessControlTransfer@PID,w
  2585  041C  1D03               	btfss	3,2
  2586  041D  2C21               	goto	i1l1965
  2587                           
  2588                           ;Usb.c: 699: SetupStage();
  2589  041E  3183  2349         	fcall	_SetupStage
  2590  0420  0008               	return
  2591  0421                     i1l1965:	
  2592                           
  2593                           ;Usb.c: 700: else if (CtrlTransferStage == 0x01)
  2594  0421  0020               	movlb	0	; select bank0
  2595  0422  0335               	decf	_CtrlTransferStage,w
  2596  0423  1D03               	btfss	3,2
  2597  0424  2C35               	goto	i1l1975
  2598                           
  2599                           ;Usb.c: 701: {
  2600                           ;Usb.c: 702: OutDataStage();
  2601  0425  3185  25C0  3184   	fcall	_OutDataStage
  2602                           
  2603                           ;Usb.c: 703: if(Interfaces[0].Output.Stat & 0x40)
  2604  0428  0020               	movlb	0	; select bank0
  2605  0429  1F20               	btfss	32,6	;volatile
  2606  042A  2C30               	goto	i1l1973
  2607                           
  2608                           ;Usb.c: 704: Interfaces[0].Output.Stat = 0x80 | 0x08;
  2609  042B  3088               	movlw	136
  2610  042C  00F9               	movwf	??_ProcessControlTransfer
  2611  042D  0879               	movf	??_ProcessControlTransfer,w
  2612  042E  00A0               	movwf	32	;volatile
  2613  042F  0008               	return
  2614  0430                     i1l1973:	
  2615                           
  2616                           ;Usb.c: 705: else
  2617                           ;Usb.c: 706: Interfaces[0].Output.Stat = 0x80 | 0x40 | 0x08;
  2618  0430  30C8               	movlw	200
  2619  0431  00F9               	movwf	??_ProcessControlTransfer
  2620  0432  0879               	movf	??_ProcessControlTransfer,w
  2621  0433  00A0               	movwf	32	;volatile
  2622                           
  2623                           ;Usb.c: 707: }
  2624  0434  0008               	return
  2625  0435                     i1l1975:	
  2626                           
  2627                           ;Usb.c: 708: else
  2628                           ;Usb.c: 709: {
  2629                           ;Usb.c: 711: WaitForSetupStage();
  2630  0435  3186  26DF         	fcall	_WaitForSetupStage
  2631                           
  2632                           ;Usb.c: 712: }
  2633                           ;Usb.c: 713: }
  2634  0437  0008               	return
  2635  0438                     i1l1977:	
  2636                           
  2637                           ;Usb.c: 715: else if(USTAT == 0x04)
  2638  0438  3004               	movlw	4
  2639  0439  003D               	movlb	29	; select bank29
  2640  043A  060F               	xorwf	15,w	;volatile
  2641  043B  1D03               	btfss	3,2
  2642  043C  0008               	return
  2643                           
  2644                           ;Usb.c: 716: {
  2645                           ;Usb.c: 718: if ((UADDR == 0) && (DeviceState == 0x04))
  2646  043D  0816               	movf	22,w	;volatile
  2647  043E  1D03               	btfss	3,2
  2648  043F  2C50               	goto	i1l1989
  2649  0440  3004               	movlw	4
  2650  0441  0020               	movlb	0	; select bank0
  2651  0442  0637               	xorwf	_DeviceState,w
  2652  0443  1D03               	btfss	3,2
  2653  0444  2C50               	goto	i1l1989
  2654                           
  2655                           ;Usb.c: 719: {
  2656                           ;Usb.c: 722: UADDR = SetupPacket.wValue0;
  2657  0445  0842               	movf	_SetupPacket+2,w	;volatile
  2658  0446  003D               	movlb	29	; select bank29
  2659  0447  0096               	movwf	22	;volatile
  2660                           
  2661                           ;Usb.c: 723: if(UADDR == 0)
  2662  0448  0816               	movf	22,w	;volatile
  2663  0449  1D03               	btfss	3,2
  2664  044A  2C50               	goto	i1l1989
  2665                           
  2666                           ;Usb.c: 726: DeviceState = 0x03;
  2667  044B  3003               	movlw	3
  2668  044C  00F9               	movwf	??_ProcessControlTransfer
  2669  044D  0879               	movf	??_ProcessControlTransfer,w
  2670  044E  0020               	movlb	0	; select bank0
  2671  044F  00B7               	movwf	_DeviceState
  2672  0450                     i1l1989:	
  2673                           
  2674                           ;Usb.c: 727: }
  2675                           ;Usb.c: 729: if (CtrlTransferStage == 0x02)
  2676  0450  3002               	movlw	2
  2677  0451  0020               	movlb	0	; select bank0
  2678  0452  0635               	xorwf	_CtrlTransferStage,w
  2679  0453  1D03               	btfss	3,2
  2680  0454  2C65               	goto	i1l1999
  2681                           
  2682                           ;Usb.c: 730: {
  2683                           ;Usb.c: 732: InDataStage();
  2684  0455  3181  2175  3184   	fcall	_InDataStage
  2685                           
  2686                           ;Usb.c: 735: if(Interfaces[0].Input.Stat & 0x40)
  2687  0458  0020               	movlb	0	; select bank0
  2688  0459  1F24               	btfss	36,6	;volatile
  2689  045A  2C60               	goto	i1l1997
  2690                           
  2691                           ;Usb.c: 736: Interfaces[0].Input.Stat = 0x80 | 0x08;
  2692  045B  3088               	movlw	136
  2693  045C  00F9               	movwf	??_ProcessControlTransfer
  2694  045D  0879               	movf	??_ProcessControlTransfer,w
  2695  045E  00A4               	movwf	36	;volatile
  2696  045F  0008               	return
  2697  0460                     i1l1997:	
  2698                           
  2699                           ;Usb.c: 737: else
  2700                           ;Usb.c: 738: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2701  0460  30C8               	movlw	200
  2702  0461  00F9               	movwf	??_ProcessControlTransfer
  2703  0462  0879               	movf	??_ProcessControlTransfer,w
  2704  0463  00A4               	movwf	36	;volatile
  2705                           
  2706                           ;Usb.c: 739: }
  2707  0464  0008               	return
  2708  0465                     i1l1999:	
  2709                           
  2710                           ;Usb.c: 740: else
  2711                           ;Usb.c: 741: {
  2712                           ;Usb.c: 743: WaitForSetupStage();
  2713  0465  3186  26DF         	fcall	_WaitForSetupStage
  2714                           
  2715                           ;Usb.c: 746: else
  2716                           ;Usb.c: 747: {
  2717                           
  2718                           ;Usb.c: 744: }
  2719                           ;Usb.c: 745: }
  2720  0467  0008               	return
  2721  0468                     __end_of_ProcessControlTransfer:	
  2722                           
  2723                           	psect	text20
  2724  0349                     __ptext20:	
  2725 ;; *************** function _SetupStage *****************
  2726 ;; Defined at:
  2727 ;;		line 610 in file "Source/Usb.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    2
  2748 ;; This function calls:
  2749 ;;		_InDataStage
  2750 ;;		_ProcessHIDRequest
  2751 ;;		_ProcessStandardRequest
  2752 ;; This function is called by:
  2753 ;;		_ProcessControlTransfer
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _SetupStage
  2759  0349                     _SetupStage:	
  2760                           
  2761                           ;Usb.c: 614: Interfaces[0].Input.Stat &= ~0x80;
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _SetupStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2765  0349  307F               	movlw	127
  2766  034A  00F8               	movwf	??_SetupStage
  2767  034B  0878               	movf	??_SetupStage,w
  2768  034C  0020               	movlb	0	; select bank0
  2769  034D  05A4               	andwf	36,f	;volatile
  2770                           
  2771                           ;Usb.c: 615: Interfaces[0].Output.Stat &= ~0x80;
  2772  034E  307F               	movlw	127
  2773  034F  00F8               	movwf	??_SetupStage
  2774  0350  0878               	movf	??_SetupStage,w
  2775  0351  05A0               	andwf	32,f	;volatile
  2776                           
  2777                           ;Usb.c: 618: CtrlTransferStage = 0x00;
  2778  0352  01B5               	clrf	_CtrlTransferStage
  2779                           
  2780                           ;Usb.c: 619: RequestHandled = 0;
  2781  0353  01BB               	clrf	_RequestHandled
  2782                           
  2783                           ;Usb.c: 620: HIDPostProcess = 0;
  2784  0354  01B8               	clrf	_HIDPostProcess
  2785                           
  2786                           ;Usb.c: 621: wCount = 0;
  2787  0355  01B2               	clrf	_wCount
  2788  0356  01B3               	clrf	_wCount+1
  2789                           
  2790                           ;Usb.c: 624: ProcessStandardRequest();
  2791  0357  3182  226D  3183   	fcall	_ProcessStandardRequest
  2792                           
  2793                           ;Usb.c: 627: ProcessHIDRequest();
  2794  035A  3181  21F2  3183   	fcall	_ProcessHIDRequest
  2795                           
  2796                           ;Usb.c: 631: if (!RequestHandled)
  2797  035D  0020               	movlb	0	; select bank0
  2798  035E  083B               	movf	_RequestHandled,w
  2799  035F  1D03               	btfss	3,2
  2800  0360  2B6D               	goto	i1l329
  2801                           
  2802                           ;Usb.c: 632: {
  2803                           ;Usb.c: 634: Interfaces[0].Output.Cnt = 0x08;
  2804  0361  3008               	movlw	8
  2805  0362  00A1               	movwf	33	;volatile
  2806                           
  2807                           ;Usb.c: 635: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  2808  0363  3040               	movlw	low _SetupPacket
  2809  0364  00A2               	movwf	34	;volatile
  2810  0365  3000               	movlw	high _SetupPacket
  2811  0366  00A3               	movwf	35	;volatile
  2812                           
  2813                           ;Usb.c: 636: Interfaces[0].Output.Stat = 0x80 | 0x04;
  2814  0367  3084               	movlw	132
  2815  0368  00F8               	movwf	??_SetupStage
  2816  0369  0878               	movf	??_SetupStage,w
  2817  036A  00A0               	movwf	32	;volatile
  2818                           
  2819                           ;Usb.c: 637: Interfaces[0].Input.Stat = 0x80 | 0x04;
  2820  036B  3084               	movlw	132
  2821  036C  2B92               	goto	L2
  2822  036D                     i1l329:	
  2823                           ;Usb.c: 638: }
  2824                           
  2825                           
  2826                           ;Usb.c: 639: else if (SetupPacket.bmRequestType & 0x80)
  2827  036D  1FC0               	btfss	_SetupPacket,7	;volatile
  2828  036E  2B96               	goto	i1l331
  2829                           
  2830                           ;Usb.c: 640: {
  2831                           ;Usb.c: 642: if(SetupPacket.wLength < wCount)
  2832  036F  0833               	movf	_wCount+1,w
  2833  0370  0247               	subwf	_SetupPacket+7,w	;volatile
  2834  0371  1D03               	skipz
  2835  0372  2B75               	goto	u217_25
  2836  0373  0832               	movf	_wCount,w
  2837  0374  0246               	subwf	_SetupPacket+6,w	;volatile
  2838  0375                     u217_25:	
  2839  0375  1803               	skipnc
  2840  0376  2B7B               	goto	i1l1919
  2841                           
  2842                           ;Usb.c: 643: wCount = SetupPacket.wLength;
  2843  0377  0847               	movf	_SetupPacket+7,w	;volatile
  2844  0378  00B3               	movwf	_wCount+1
  2845  0379  0846               	movf	_SetupPacket+6,w	;volatile
  2846  037A  00B2               	movwf	_wCount
  2847  037B                     i1l1919:	
  2848                           
  2849                           ;Usb.c: 644: InDataStage();
  2850  037B  3181  2175  3183   	fcall	_InDataStage
  2851                           
  2852                           ;Usb.c: 645: CtrlTransferStage = 0x02;
  2853  037E  3002               	movlw	2
  2854  037F  00F8               	movwf	??_SetupStage
  2855  0380  0878               	movf	??_SetupStage,w
  2856  0381  0020               	movlb	0	; select bank0
  2857  0382  00B5               	movwf	_CtrlTransferStage
  2858                           
  2859                           ;Usb.c: 647: Interfaces[0].Output.Cnt = 0x08;
  2860  0383  3008               	movlw	8
  2861  0384  00A1               	movwf	33	;volatile
  2862                           
  2863                           ;Usb.c: 648: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  2864  0385  3040               	movlw	low _SetupPacket
  2865  0386  00A2               	movwf	34	;volatile
  2866  0387  3000               	movlw	high _SetupPacket
  2867  0388  00A3               	movwf	35	;volatile
  2868                           
  2869                           ;Usb.c: 649: Interfaces[0].Output.Stat = 0x80;
  2870  0389  3080               	movlw	128
  2871  038A  00F8               	movwf	??_SetupStage
  2872  038B  0878               	movf	??_SetupStage,w
  2873  038C  00A0               	movwf	32	;volatile
  2874                           
  2875                           ;Usb.c: 652: Interfaces[0].Input.ADDR = ((unsigned int)(((unsigned long)&ControlTransfer
      +                          Buffer) & 0xFFFF));
  2876  038D  3049               	movlw	low _ControlTransferBuffer
  2877  038E  00A6               	movwf	38	;volatile
  2878  038F  3000               	movlw	high _ControlTransferBuffer
  2879  0390  00A7               	movwf	39	;volatile
  2880                           
  2881                           ;Usb.c: 654: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2882  0391  30C8               	movlw	200
  2883  0392                     L2:	
  2884  0392  00F8               	movwf	??_SetupStage
  2885  0393  0878               	movf	??_SetupStage,w
  2886  0394  00A4               	movwf	36	;volatile
  2887                           
  2888                           ;Usb.c: 655: }
  2889  0395  2BA7               	goto	i1l1943
  2890  0396                     i1l331:	
  2891                           
  2892                           ;Usb.c: 656: else
  2893                           ;Usb.c: 657: {
  2894                           ;Usb.c: 659: CtrlTransferStage = 0x01;
  2895  0396  01B5               	clrf	_CtrlTransferStage
  2896  0397  0AB5               	incf	_CtrlTransferStage,f
  2897                           
  2898                           ;Usb.c: 662: Interfaces[0].Input.Cnt = 0;
  2899  0398  01A5               	clrf	37	;volatile
  2900                           
  2901                           ;Usb.c: 663: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2902  0399  30C8               	movlw	200
  2903  039A  00F8               	movwf	??_SetupStage
  2904  039B  0878               	movf	??_SetupStage,w
  2905  039C  00A4               	movwf	36	;volatile
  2906                           
  2907                           ;Usb.c: 666: Interfaces[0].Output.Cnt = 0x08;
  2908  039D  3008               	movlw	8
  2909  039E  00A1               	movwf	33	;volatile
  2910                           
  2911                           ;Usb.c: 667: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&ControlTransfe
      +                          rBuffer) & 0xFFFF));
  2912  039F  3049               	movlw	low _ControlTransferBuffer
  2913  03A0  00A2               	movwf	34	;volatile
  2914  03A1  3000               	movlw	high _ControlTransferBuffer
  2915  03A2  00A3               	movwf	35	;volatile
  2916                           
  2917                           ;Usb.c: 669: Interfaces[0].Output.Stat = 0x80 | 0x40 | 0x08;
  2918  03A3  30C8               	movlw	200
  2919  03A4  00F8               	movwf	??_SetupStage
  2920  03A5  0878               	movf	??_SetupStage,w
  2921  03A6  00A0               	movwf	32	;volatile
  2922  03A7                     i1l1943:	
  2923                           
  2924                           ;Usb.c: 670: }
  2925                           ;Usb.c: 673: UCONbits.PKTDIS = 0;
  2926  03A7  003D               	movlb	29	; select bank29
  2927  03A8  120E               	bcf	14,4	;volatile
  2928  03A9  0008               	return
  2929  03AA                     __end_of_SetupStage:	
  2930                           
  2931                           	psect	text21
  2932  026D                     __ptext21:	
  2933 ;; *************** function _ProcessStandardRequest *****************
  2934 ;; Defined at:
  2935 ;;		line 473 in file "Source/Usb.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  request         1    7[COMMON] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;		None               void
  2942 ;; Registers used:
  2943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;Total ram usage:        2 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    1
  2956 ;; This function calls:
  2957 ;;		_GetDescriptor
  2958 ;;		_GetStatus
  2959 ;;		_HIDInitEndpoints
  2960 ;;		_SetFeature
  2961 ;; This function is called by:
  2962 ;;		_SetupStage
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _ProcessStandardRequest
  2968  026D                     _ProcessStandardRequest:	
  2969                           
  2970                           ;Usb.c: 475: BYTE request = SetupPacket.bRequest;
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _ProcessStandardRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2974  026D  0020               	movlb	0	; select bank0
  2975  026E  0841               	movf	_SetupPacket+1,w	;volatile
  2976  026F  00F6               	movwf	??_ProcessStandardRequest
  2977  0270  0876               	movf	??_ProcessStandardRequest,w
  2978  0271  00F7               	movwf	ProcessStandardRequest@request
  2979                           
  2980                           ;Usb.c: 477: if((SetupPacket.bmRequestType & 0x60) != 0x00)
  2981  0272  0840               	movf	_SetupPacket,w	;volatile
  2982  0273  3960               	andlw	96
  2983  0274  1D03               	btfss	3,2
  2984  0275  0008               	return
  2985                           
  2986                           ;Usb.c: 482: if (request == 0x05)
  2987                           
  2988                           ;Usb.c: 480: return;
  2989  0276  3005               	movlw	5
  2990  0277  0677               	xorwf	ProcessStandardRequest@request,w
  2991  0278  1D03               	btfss	3,2
  2992  0279  2A85               	goto	i1l1731
  2993                           
  2994                           ;Usb.c: 483: {
  2995                           ;Usb.c: 488: RequestHandled = 1;
  2996  027A  01BB               	clrf	_RequestHandled
  2997  027B  0ABB               	incf	_RequestHandled,f
  2998                           
  2999                           ;Usb.c: 489: DeviceState = 0x04;
  3000  027C  3004               	movlw	4
  3001  027D  00F6               	movwf	??_ProcessStandardRequest
  3002  027E  0876               	movf	??_ProcessStandardRequest,w
  3003  027F  00B7               	movwf	_DeviceState
  3004                           
  3005                           ;Usb.c: 490: DeviceAddress = SetupPacket.wValue0;
  3006  0280  0842               	movf	_SetupPacket+2,w	;volatile
  3007  0281  00F6               	movwf	??_ProcessStandardRequest
  3008  0282  0876               	movf	??_ProcessStandardRequest,w
  3009  0283  00B6               	movwf	_DeviceAddress
  3010                           
  3011                           ;Usb.c: 491: }
  3012  0284  0008               	return
  3013  0285                     i1l1731:	
  3014                           
  3015                           ;Usb.c: 492: else if (request == 0x06)
  3016  0285  3006               	movlw	6
  3017  0286  0677               	xorwf	ProcessStandardRequest@request,w
  3018  0287  1D03               	btfss	3,2
  3019  0288  2A8C               	goto	i1l1735
  3020                           
  3021                           ;Usb.c: 493: {
  3022                           ;Usb.c: 494: GetDescriptor();
  3023  0289  3184  2468         	fcall	_GetDescriptor
  3024                           
  3025                           ;Usb.c: 495: }
  3026  028B  0008               	return
  3027  028C                     i1l1735:	
  3028                           
  3029                           ;Usb.c: 496: else if (request == 0x09)
  3030  028C  3009               	movlw	9
  3031  028D  0677               	xorwf	ProcessStandardRequest@request,w
  3032  028E  1D03               	btfss	3,2
  3033  028F  2AA6               	goto	i1l1749
  3034                           
  3035                           ;Usb.c: 497: {
  3036                           ;Usb.c: 498: RequestHandled = 1;
  3037  0290  0020               	movlb	0	; select bank0
  3038  0291  01BB               	clrf	_RequestHandled
  3039  0292  0ABB               	incf	_RequestHandled,f
  3040                           
  3041                           ;Usb.c: 499: CurrentConfiguration = SetupPacket.wValue0;
  3042  0293  0842               	movf	_SetupPacket+2,w	;volatile
  3043  0294  00F6               	movwf	??_ProcessStandardRequest
  3044  0295  0876               	movf	??_ProcessStandardRequest,w
  3045  0296  00E1               	movwf	_CurrentConfiguration
  3046                           
  3047                           ;Usb.c: 502: if (CurrentConfiguration == 0)
  3048  0297  0861               	movf	_CurrentConfiguration,w
  3049  0298  1D03               	btfss	3,2
  3050  0299  2A9F               	goto	i1l1745
  3051                           
  3052                           ;Usb.c: 505: DeviceState = 0x04;
  3053  029A  3004               	movlw	4
  3054  029B  00F6               	movwf	??_ProcessStandardRequest
  3055  029C  0876               	movf	??_ProcessStandardRequest,w
  3056  029D  00B7               	movwf	_DeviceState
  3057  029E  0008               	return
  3058  029F                     i1l1745:	
  3059                           
  3060                           ;Usb.c: 506: else
  3061                           ;Usb.c: 507: {
  3062                           ;Usb.c: 509: DeviceState = 0x05;
  3063  029F  3005               	movlw	5
  3064  02A0  00F6               	movwf	??_ProcessStandardRequest
  3065  02A1  0876               	movf	??_ProcessStandardRequest,w
  3066  02A2  00B7               	movwf	_DeviceState
  3067                           
  3068                           ;Usb.c: 512: HIDInitEndpoints();
  3069  02A3  3180  20F1         	fcall	_HIDInitEndpoints
  3070                           
  3071                           ;Usb.c: 516: }
  3072                           ;Usb.c: 517: }
  3073  02A5  0008               	return
  3074  02A6                     i1l1749:	
  3075                           
  3076                           ;Usb.c: 518: else if (request == 0x08)
  3077  02A6  3008               	movlw	8
  3078  02A7  0677               	xorwf	ProcessStandardRequest@request,w
  3079  02A8  1D03               	btfss	3,2
  3080  02A9  2AB7               	goto	i1l1757
  3081                           
  3082                           ;Usb.c: 519: {
  3083                           ;Usb.c: 520: RequestHandled = 1;
  3084  02AA  0020               	movlb	0	; select bank0
  3085  02AB  01BB               	clrf	_RequestHandled
  3086  02AC  0ABB               	incf	_RequestHandled,f
  3087                           
  3088                           ;Usb.c: 521: outPtr = (BYTE*)&CurrentConfiguration;
  3089  02AD  3061               	movlw	(low (_CurrentConfiguration| 0))& (0+255)
  3090  02AE  00F6               	movwf	??_ProcessStandardRequest
  3091  02AF  0876               	movf	??_ProcessStandardRequest,w
  3092  02B0  00BE               	movwf	_outPtr
  3093                           
  3094                           ;Usb.c: 522: wCount = 1;
  3095  02B1  3001               	movlw	1
  3096  02B2  00B2               	movwf	_wCount
  3097  02B3  3000               	movlw	0
  3098  02B4  00B3               	movwf	_wCount+1
  3099                           
  3100                           ;Usb.c: 523: transferType=0;
  3101  02B5  01BF               	clrf	_transferType
  3102                           
  3103                           ;Usb.c: 524: }
  3104  02B6  0008               	return
  3105  02B7                     i1l1757:	
  3106                           
  3107                           ;Usb.c: 525: else if (request == 0x00)
  3108  02B7  0877               	movf	ProcessStandardRequest@request,w
  3109  02B8  1D03               	btfss	3,2
  3110  02B9  2ABD               	goto	i1l1761
  3111                           
  3112                           ;Usb.c: 526: {
  3113                           ;Usb.c: 527: GetStatus();
  3114  02BA  3185  256C         	fcall	_GetStatus
  3115                           
  3116                           ;Usb.c: 528: }
  3117  02BC  0008               	return
  3118  02BD                     i1l1761:	
  3119                           
  3120                           ;Usb.c: 529: else if ((request == 0x01) ||
  3121                           ;Usb.c: 530: (request == 0x03))
  3122  02BD  0377               	decf	ProcessStandardRequest@request,w
  3123  02BE  1903               	btfsc	3,2
  3124  02BF  2AC4               	goto	i1l1765
  3125  02C0  3003               	movlw	3
  3126  02C1  0677               	xorwf	ProcessStandardRequest@request,w
  3127  02C2  1D03               	btfss	3,2
  3128  02C3  2AC7               	goto	i1l1767
  3129  02C4                     i1l1765:	
  3130                           
  3131                           ;Usb.c: 531: {
  3132                           ;Usb.c: 532: SetFeature();
  3133  02C4  3183  23AA         	fcall	_SetFeature
  3134                           
  3135                           ;Usb.c: 533: }
  3136  02C6  0008               	return
  3137  02C7                     i1l1767:	
  3138                           
  3139                           ;Usb.c: 534: else if (request == 0x0A)
  3140  02C7  300A               	movlw	10
  3141  02C8  0677               	xorwf	ProcessStandardRequest@request,w
  3142  02C9  1D03               	btfss	3,2
  3143  02CA  2AD9               	goto	i1l1777
  3144                           
  3145                           ;Usb.c: 535: {
  3146                           ;Usb.c: 538: RequestHandled = 1;
  3147  02CB  0020               	movlb	0	; select bank0
  3148  02CC  01BB               	clrf	_RequestHandled
  3149  02CD  0ABB               	incf	_RequestHandled,f
  3150                           
  3151                           ;Usb.c: 539: ControlTransferBuffer[0] = 0;
  3152  02CE  01C9               	clrf	_ControlTransferBuffer	;volatile
  3153                           
  3154                           ;Usb.c: 540: outPtr = (BYTE*)&ControlTransferBuffer;
  3155  02CF  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  3156  02D0  00F6               	movwf	??_ProcessStandardRequest
  3157  02D1  0876               	movf	??_ProcessStandardRequest,w
  3158  02D2  00BE               	movwf	_outPtr
  3159                           
  3160                           ;Usb.c: 541: wCount = 1;
  3161  02D3  3001               	movlw	1
  3162  02D4  00B2               	movwf	_wCount
  3163  02D5  3000               	movlw	0
  3164  02D6  00B3               	movwf	_wCount+1
  3165                           
  3166                           ;Usb.c: 542: transferType=0;
  3167  02D7  01BF               	clrf	_transferType
  3168                           
  3169                           ;Usb.c: 543: }
  3170  02D8  0008               	return
  3171  02D9                     i1l1777:	
  3172                           
  3173                           ;Usb.c: 544: else if (request == 0x0B)
  3174  02D9  300B               	movlw	11
  3175  02DA  0677               	xorwf	ProcessStandardRequest@request,w
  3176  02DB  1D03               	btfss	3,2
  3177  02DC  0008               	return
  3178                           
  3179                           ;Usb.c: 545: {
  3180                           ;Usb.c: 547: RequestHandled = 1;
  3181  02DD  0020               	movlb	0	; select bank0
  3182  02DE  01BB               	clrf	_RequestHandled
  3183  02DF  0ABB               	incf	_RequestHandled,f
  3184                           
  3185                           ;Usb.c: 555: else
  3186                           ;Usb.c: 556: {
  3187                           
  3188                           ;Usb.c: 553: {
  3189                           ;Usb.c: 554: }
  3190                           
  3191                           ;Usb.c: 550: {
  3192                           ;Usb.c: 551: }
  3193                           
  3194                           ;Usb.c: 548: }
  3195  02E0  0008               	return
  3196  02E1                     __end_of_ProcessStandardRequest:	
  3197                           
  3198                           	psect	text22
  3199  03AA                     __ptext22:	
  3200 ;; *************** function _SetFeature *****************
  3201 ;; Defined at:
  3202 ;;		line 427 in file "Source/Usb.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  endpointDir     1    5[COMMON] unsigned char 
  3207 ;;  endpointNum     1    4[COMMON] unsigned char 
  3208 ;;  feature         1    3[COMMON] unsigned char 
  3209 ;;  recipient       1    2[COMMON] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;Total ram usage:        6 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_ProcessStandardRequest
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _SetFeature
  3234  03AA                     _SetFeature:	
  3235                           
  3236                           ;Usb.c: 429: BYTE recipient = SetupPacket.bmRequestType & 0x1F;
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _SetFeature: [wreg+fsr1l+fsr1h+status,2+status,0]
  3240  03AA  0020               	movlb	0	; select bank0
  3241  03AB  0840               	movf	_SetupPacket,w	;volatile
  3242  03AC  391F               	andlw	31
  3243  03AD  00F0               	movwf	??_SetFeature
  3244  03AE  0870               	movf	??_SetFeature,w
  3245  03AF  00F2               	movwf	SetFeature@recipient
  3246                           
  3247                           ;Usb.c: 430: BYTE feature = SetupPacket.wValue0;
  3248  03B0  0842               	movf	_SetupPacket+2,w	;volatile
  3249  03B1  00F0               	movwf	??_SetFeature
  3250  03B2  0870               	movf	??_SetFeature,w
  3251  03B3  00F3               	movwf	SetFeature@feature
  3252                           
  3253                           ;Usb.c: 432: if (recipient == 0x00)
  3254  03B4  0872               	movf	SetFeature@recipient,w
  3255  03B5  1D03               	btfss	3,2
  3256  03B6  2BC5               	goto	i1l1613
  3257                           
  3258                           ;Usb.c: 433: {
  3259                           ;Usb.c: 435: if (feature == 0x01)
  3260  03B7  0373               	decf	SetFeature@feature,w
  3261  03B8  1D03               	btfss	3,2
  3262  03B9  0008               	return
  3263                           
  3264                           ;Usb.c: 436: {
  3265                           ;Usb.c: 437: RequestHandled = 1;
  3266  03BA  01BB               	clrf	_RequestHandled
  3267  03BB  0ABB               	incf	_RequestHandled,f
  3268                           
  3269                           ;Usb.c: 438: if (SetupPacket.bRequest == 0x03)
  3270  03BC  3003               	movlw	3
  3271  03BD  0641               	xorwf	_SetupPacket+1,w	;volatile
  3272  03BE  1D03               	btfss	3,2
  3273  03BF  2BC3               	goto	i1l1611
  3274                           
  3275                           ;Usb.c: 439: RemoteWakeup = 1;
  3276  03C0  01BA               	clrf	_RemoteWakeup
  3277  03C1  0ABA               	incf	_RemoteWakeup,f
  3278  03C2  0008               	return
  3279  03C3                     i1l1611:	
  3280                           
  3281                           ;Usb.c: 440: else
  3282                           ;Usb.c: 441: RemoteWakeup = 0;
  3283  03C3  01BA               	clrf	_RemoteWakeup
  3284                           
  3285                           ;Usb.c: 442: }
  3286                           ;Usb.c: 444: }
  3287  03C4  0008               	return
  3288  03C5                     i1l1613:	
  3289                           
  3290                           ;Usb.c: 445: else if (recipient == 0x02)
  3291  03C5  3002               	movlw	2
  3292  03C6  0672               	xorwf	SetFeature@recipient,w
  3293  03C7  1D03               	btfss	3,2
  3294  03C8  0008               	return
  3295                           
  3296                           ;Usb.c: 446: {
  3297                           ;Usb.c: 448: BYTE endpointNum = SetupPacket.wIndex0 & 0x0F;
  3298  03C9  0844               	movf	_SetupPacket+4,w	;volatile
  3299  03CA  390F               	andlw	15
  3300  03CB  00F0               	movwf	??_SetFeature
  3301  03CC  0870               	movf	??_SetFeature,w
  3302  03CD  00F4               	movwf	SetFeature@endpointNum
  3303                           
  3304                           ;Usb.c: 449: BYTE endpointDir = SetupPacket.wIndex0 & 0x80;
  3305  03CE  0844               	movf	_SetupPacket+4,w	;volatile
  3306  03CF  3980               	andlw	128
  3307  03D0  00F0               	movwf	??_SetFeature
  3308  03D1  0870               	movf	??_SetFeature,w
  3309  03D2  00F5               	movwf	SetFeature@endpointDir
  3310                           
  3311                           ;Usb.c: 450: if ((feature == 0x00) && (endpointNum != 0))
  3312  03D3  0873               	movf	SetFeature@feature,w
  3313  03D4  1D03               	btfss	3,2
  3314  03D5  0008               	return
  3315  03D6  0874               	movf	SetFeature@endpointNum,w
  3316  03D7  1903               	btfsc	3,2
  3317  03D8  0008               	return
  3318                           
  3319                           ;Usb.c: 451: {
  3320                           ;Usb.c: 453: RequestHandled = 1;
  3321  03D9  01BB               	clrf	_RequestHandled
  3322  03DA  0ABB               	incf	_RequestHandled,f
  3323                           
  3324                           ;Usb.c: 456: inPtr = (BYTE *)&Interfaces[0].Output + (endpointNum * 8);
  3325  03DB  0874               	movf	SetFeature@endpointNum,w
  3326  03DC  00F0               	movwf	??_SetFeature
  3327  03DD  3002               	movlw	2
  3328  03DE                     u160_25:	
  3329  03DE  35F0               	lslf	??_SetFeature,f
  3330  03DF  3EFF               	addlw	-1
  3331  03E0  1D03               	skipz
  3332  03E1  2BDE               	goto	u160_25
  3333  03E2  3570               	lslf	??_SetFeature,w
  3334  03E3  3E20               	addlw	32
  3335  03E4  00F1               	movwf	??_SetFeature+1
  3336  03E5  0871               	movf	??_SetFeature+1,w
  3337  03E6  00BD               	movwf	_inPtr
  3338                           
  3339                           ;Usb.c: 457: if (endpointDir)
  3340  03E7  0875               	movf	SetFeature@endpointDir,w
  3341  03E8  1903               	btfsc	3,2
  3342  03E9  2BEE               	goto	i1l274
  3343                           
  3344                           ;Usb.c: 458: inPtr += 4;
  3345  03EA  3004               	movlw	4
  3346  03EB  00F0               	movwf	??_SetFeature
  3347  03EC  0870               	movf	??_SetFeature,w
  3348  03ED  07BD               	addwf	_inPtr,f
  3349  03EE                     i1l274:	
  3350                           
  3351                           ;Usb.c: 460: if(SetupPacket.bRequest == 0x03)
  3352  03EE  3003               	movlw	3
  3353  03EF  0641               	xorwf	_SetupPacket+1,w	;volatile
  3354  03F0  1D03               	btfss	3,2
  3355  03F1  2BFA               	goto	i1l1629
  3356                           
  3357                           ;Usb.c: 461: *inPtr = 0x84;
  3358  03F2  3084               	movlw	132
  3359  03F3  00F0               	movwf	??_SetFeature
  3360  03F4  083D               	movf	_inPtr,w
  3361  03F5  0086               	movwf	6
  3362  03F6  0187               	clrf	7
  3363  03F7  0870               	movf	??_SetFeature,w
  3364  03F8  0081               	movwf	1
  3365  03F9  0008               	return
  3366  03FA                     i1l1629:	
  3367                           
  3368                           ;Usb.c: 462: else
  3369                           ;Usb.c: 463: {
  3370                           ;Usb.c: 464: if(endpointDir == 1)
  3371  03FA  0375               	decf	SetFeature@endpointDir,w
  3372  03FB  1D03               	btfss	3,2
  3373  03FC  2C02               	goto	i1l1633
  3374                           
  3375                           ;Usb.c: 465: *inPtr = 0x00;
  3376  03FD  083D               	movf	_inPtr,w
  3377  03FE  0086               	movwf	6
  3378  03FF  0187               	clrf	7
  3379  0400  0181               	clrf	1
  3380  0401  0008               	return
  3381  0402                     i1l1633:	
  3382                           
  3383                           ;Usb.c: 466: else
  3384                           ;Usb.c: 467: *inPtr = 0x88;
  3385  0402  3088               	movlw	136
  3386  0403  00F0               	movwf	??_SetFeature
  3387  0404  083D               	movf	_inPtr,w
  3388  0405  0086               	movwf	6
  3389  0406  0187               	clrf	7
  3390  0407  0870               	movf	??_SetFeature,w
  3391  0408  0081               	movwf	1
  3392  0409  0008               	return
  3393  040A                     __end_of_SetFeature:	
  3394                           
  3395                           	psect	text23
  3396  00F1                     __ptext23:	
  3397 ;; *************** function _HIDInitEndpoints *****************
  3398 ;; Defined at:
  3399 ;;		line 231 in file "Source/Usb.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1    4[COMMON] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;Total ram usage:        5 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_ProcessStandardRequest
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function _HIDInitEndpoints
  3428  00F1                     _HIDInitEndpoints:	
  3429                           
  3430                           ;Usb.c: 233: BYTE i = 0;
  3431                           
  3432                           ;incstack = 0
  3433                           ; Regs used in _HIDInitEndpoints: [wreg+fsr1l+fsr1h+status,2+status,0]
  3434  00F1  01F4               	clrf	HIDInitEndpoints@i
  3435                           
  3436                           ;Usb.c: 235: HidRxLen =0;
  3437  00F2  0020               	movlb	0	; select bank0
  3438  00F3  01B9               	clrf	_HidRxLen
  3439                           
  3440                           ;Usb.c: 237: for (i = 0 ; i < 0x01; i++)
  3441  00F4  01F4               	clrf	HIDInitEndpoints@i
  3442  00F5                     L3:	
  3443  00F5  0874               	movf	HIDInitEndpoints@i,w
  3444  00F6  1D03               	btfss	3,2
  3445  00F7  0008               	return
  3446                           
  3447                           ;Usb.c: 238: {
  3448                           ;Usb.c: 240: EndpointFlags[i] = 0x1E;
  3449  00F8  301E               	movlw	30
  3450  00F9  00F0               	movwf	??_HIDInitEndpoints
  3451  00FA  0874               	movf	HIDInitEndpoints@i,w
  3452  00FB  3E99               	addlw	153
  3453  00FC  0086               	movwf	6
  3454  00FD  300E               	movlw	14	; select bank29/30
  3455  00FE  0087               	movwf	7
  3456  00FF  0870               	movf	??_HIDInitEndpoints,w
  3457  0100  0081               	movwf	1
  3458                           
  3459                           ;Usb.c: 242: Interfaces[i + 1].Output.Cnt = Buffers[(i * 2) + 1].Size;
  3460  0101  3574               	lslf	HIDInitEndpoints@i,w
  3461  0102  0709               	addwf	9,w
  3462  0103  3E02               	addlw	2
  3463  0104  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3464  0105  0086               	movwf	6
  3465  0106  0187               	clrf	7
  3466  0107  0801               	movf	1,w
  3467  0108  00F0               	movwf	??_HIDInitEndpoints
  3468  0109  0874               	movf	HIDInitEndpoints@i,w
  3469  010A  00F1               	movwf	??_HIDInitEndpoints+1
  3470  010B  3002               	movlw	2
  3471  010C                     u133_25:	
  3472  010C  35F1               	lslf	??_HIDInitEndpoints+1,f
  3473  010D  3EFF               	addlw	-1
  3474  010E  1D03               	skipz
  3475  010F  290C               	goto	u133_25
  3476  0110  3571               	lslf	??_HIDInitEndpoints+1,w
  3477  0111  3E09               	addlw	9
  3478  0112  3E20               	addlw	32
  3479  0113  0086               	movwf	6
  3480  0114  0187               	clrf	7
  3481  0115  0870               	movf	??_HIDInitEndpoints,w
  3482  0116  0081               	movwf	1
  3483                           
  3484                           ;Usb.c: 245: Interfaces[i + 1].Output.ADDR = ((unsigned int)(((unsigned long)Buffers[(i 
      +                          * 2) + 1].Buffer) & 0xFFFF));
  3485  0117  3574               	lslf	HIDInitEndpoints@i,w
  3486  0118  0709               	addwf	9,w
  3487  0119  3E03               	addlw	3
  3488  011A  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3489  011B  0086               	movwf	6
  3490  011C  0187               	clrf	7
  3491  011D  0801               	movf	1,w
  3492  011E  00F0               	movwf	??_HIDInitEndpoints
  3493  011F  3000               	movlw	0
  3494  0120  00F1               	movwf	??_HIDInitEndpoints+1
  3495  0121  0874               	movf	HIDInitEndpoints@i,w
  3496  0122  00F2               	movwf	??_HIDInitEndpoints+2
  3497  0123  3002               	movlw	2
  3498  0124                     u134_25:	
  3499  0124  35F2               	lslf	??_HIDInitEndpoints+2,f
  3500  0125  3EFF               	addlw	-1
  3501  0126  1D03               	skipz
  3502  0127  2924               	goto	u134_25
  3503  0128  3572               	lslf	??_HIDInitEndpoints+2,w
  3504  0129  3E0A               	addlw	10
  3505  012A  3E20               	addlw	32
  3506  012B  0086               	movwf	6
  3507  012C  0187               	clrf	7
  3508  012D  0870               	movf	??_HIDInitEndpoints,w
  3509  012E  3FC0               	movwi [0]fsr1
  3510  012F  0871               	movf	??_HIDInitEndpoints+1,w
  3511  0130  3FC1               	movwi [1]fsr1
  3512                           
  3513                           ;Usb.c: 247: Interfaces[i + 1].Output.Stat = 0x80 | 0x08;
  3514  0131  3088               	movlw	136
  3515  0132  00F0               	movwf	??_HIDInitEndpoints
  3516  0133  0874               	movf	HIDInitEndpoints@i,w
  3517  0134  00F1               	movwf	??_HIDInitEndpoints+1
  3518  0135  3002               	movlw	2
  3519  0136                     u135_25:	
  3520  0136  35F1               	lslf	??_HIDInitEndpoints+1,f
  3521  0137  3EFF               	addlw	-1
  3522  0138  1D03               	skipz
  3523  0139  2936               	goto	u135_25
  3524  013A  3571               	lslf	??_HIDInitEndpoints+1,w
  3525  013B  3E08               	addlw	8
  3526  013C  3E20               	addlw	32
  3527  013D  0086               	movwf	6
  3528  013E  0187               	clrf	7
  3529  013F  0870               	movf	??_HIDInitEndpoints,w
  3530  0140  0081               	movwf	1
  3531                           
  3532                           ;Usb.c: 250: Interfaces[i + 1].Input.ADDR = ((unsigned int)(((unsigned long)Buffers[(i *
      +                           2)].Buffer) & 0xFFFF));
  3533  0141  0874               	movf	HIDInitEndpoints@i,w
  3534  0142  00F0               	movwf	??_HIDInitEndpoints
  3535  0143  3001               	movlw	1
  3536  0144                     u136_25:	
  3537  0144  35F0               	lslf	??_HIDInitEndpoints,f
  3538  0145  0B89               	decfsz	9,f
  3539  0146  2944               	goto	u136_25
  3540  0147  1403               	setc
  3541  0148  0D70               	rlf	??_HIDInitEndpoints,w
  3542  0149  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3543  014A  0086               	movwf	6
  3544  014B  0187               	clrf	7
  3545  014C  0801               	movf	1,w
  3546  014D  00F1               	movwf	??_HIDInitEndpoints+1
  3547  014E  3000               	movlw	0
  3548  014F  00F2               	movwf	??_HIDInitEndpoints+2
  3549  0150  0874               	movf	HIDInitEndpoints@i,w
  3550  0151  00F3               	movwf	??_HIDInitEndpoints+3
  3551  0152  3002               	movlw	2
  3552  0153                     u137_25:	
  3553  0153  35F3               	lslf	??_HIDInitEndpoints+3,f
  3554  0154  3EFF               	addlw	-1
  3555  0155  1D03               	skipz
  3556  0156  2953               	goto	u137_25
  3557  0157  3573               	lslf	??_HIDInitEndpoints+3,w
  3558  0158  3E0E               	addlw	14
  3559  0159  3E20               	addlw	32
  3560  015A  0086               	movwf	6
  3561  015B  0187               	clrf	7
  3562  015C  0871               	movf	??_HIDInitEndpoints+1,w
  3563  015D  3FC0               	movwi [0]fsr1
  3564  015E  0872               	movf	??_HIDInitEndpoints+2,w
  3565  015F  3FC1               	movwi [1]fsr1
  3566                           
  3567                           ;Usb.c: 251: Interfaces[i + 1].Input.Stat = 0x40;
  3568  0160  3040               	movlw	64
  3569  0161  00F0               	movwf	??_HIDInitEndpoints
  3570  0162  0874               	movf	HIDInitEndpoints@i,w
  3571  0163  00F1               	movwf	??_HIDInitEndpoints+1
  3572  0164  3002               	movlw	2
  3573  0165                     u138_25:	
  3574  0165  35F1               	lslf	??_HIDInitEndpoints+1,f
  3575  0166  3EFF               	addlw	-1
  3576  0167  1D03               	skipz
  3577  0168  2965               	goto	u138_25
  3578  0169  3571               	lslf	??_HIDInitEndpoints+1,w
  3579  016A  3E0C               	addlw	12
  3580  016B  3E20               	addlw	32
  3581  016C  0086               	movwf	6
  3582  016D  0187               	clrf	7
  3583  016E  0870               	movf	??_HIDInitEndpoints,w
  3584  016F  0081               	movwf	1
  3585  0170  3001               	movlw	1
  3586  0171  00F0               	movwf	??_HIDInitEndpoints
  3587  0172  0870               	movf	??_HIDInitEndpoints,w
  3588  0173  07F4               	addwf	HIDInitEndpoints@i,f
  3589  0174  28F5               	goto	L3
  3590  0175                     __end_of_HIDInitEndpoints:	
  3591                           
  3592                           	psect	text24
  3593  056C                     __ptext24:	
  3594 ;; *************** function _GetStatus *****************
  3595 ;; Defined at:
  3596 ;;		line 380 in file "Source/Usb.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  endpointDir     1    3[COMMON] unsigned char 
  3601 ;;  endpointNum     1    2[COMMON] unsigned char 
  3602 ;;  recipient       1    4[COMMON] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;Total ram usage:        5 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_ProcessStandardRequest
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _GetStatus
  3627  056C                     _GetStatus:	
  3628                           
  3629                           ;Usb.c: 383: BYTE recipient = SetupPacket.bmRequestType & 0x1F;
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _GetStatus: [wreg+fsr1l+fsr1h+status,2+status,0]
  3633  056C  0020               	movlb	0	; select bank0
  3634  056D  0840               	movf	_SetupPacket,w	;volatile
  3635  056E  391F               	andlw	31
  3636  056F  00F0               	movwf	??_GetStatus
  3637  0570  0870               	movf	??_GetStatus,w
  3638  0571  00F4               	movwf	GetStatus@recipient
  3639                           
  3640                           ;Usb.c: 384: ControlTransferBuffer[0] = 0;
  3641  0572  01C9               	clrf	_ControlTransferBuffer	;volatile
  3642                           
  3643                           ;Usb.c: 385: ControlTransferBuffer[1] = 0;
  3644  0573  01CA               	clrf	_ControlTransferBuffer+1	;volatile
  3645                           
  3646                           ;Usb.c: 388: if (recipient == 0x00)
  3647  0574  0874               	movf	GetStatus@recipient,w
  3648  0575  1D03               	btfss	3,2
  3649  0576  2D81               	goto	i1l1571
  3650                           
  3651                           ;Usb.c: 389: {
  3652                           ;Usb.c: 391: RequestHandled = 1;
  3653  0577  01BB               	clrf	_RequestHandled
  3654  0578  0ABB               	incf	_RequestHandled,f
  3655                           
  3656                           ;Usb.c: 393: if (SelfPowered)
  3657  0579  083C               	movf	_SelfPowered,w
  3658  057A  1D03               	btfss	3,2
  3659                           
  3660                           ;Usb.c: 394: ControlTransferBuffer[0] |= 0x01;
  3661  057B  1449               	bsf	_ControlTransferBuffer,0	;volatile
  3662                           
  3663                           ;Usb.c: 395: if (RemoteWakeup)
  3664  057C  083A               	movf	_RemoteWakeup,w
  3665  057D  1903               	btfsc	3,2
  3666  057E  2DB3               	goto	i1l1591
  3667                           
  3668                           ;Usb.c: 396: ControlTransferBuffer[0] |= 0x02;
  3669  057F  14C9               	bsf	_ControlTransferBuffer,1	;volatile
  3670                           
  3671                           ;Usb.c: 397: }
  3672  0580  2DB3               	goto	i1l1591
  3673  0581                     i1l1571:	
  3674                           
  3675                           ;Usb.c: 398: else if (recipient == 0x01)
  3676  0581  0374               	decf	GetStatus@recipient,w
  3677  0582  1D03               	btfss	3,2
  3678  0583  2D87               	goto	i1l1575
  3679                           
  3680                           ;Usb.c: 399: {
  3681                           ;Usb.c: 401: RequestHandled = 1;
  3682  0584  01BB               	clrf	_RequestHandled
  3683  0585  0ABB               	incf	_RequestHandled,f
  3684                           
  3685                           ;Usb.c: 402: }
  3686  0586  2DB3               	goto	i1l1591
  3687  0587                     i1l1575:	
  3688                           
  3689                           ;Usb.c: 403: else if (recipient == 0x02)
  3690  0587  3002               	movlw	2
  3691  0588  0674               	xorwf	GetStatus@recipient,w
  3692  0589  1D03               	btfss	3,2
  3693  058A  2DB3               	goto	i1l1591
  3694                           
  3695                           ;Usb.c: 404: {
  3696                           ;Usb.c: 406: BYTE endpointNum = SetupPacket.wIndex0 & 0x0F;
  3697  058B  0844               	movf	_SetupPacket+4,w	;volatile
  3698  058C  390F               	andlw	15
  3699  058D  00F0               	movwf	??_GetStatus
  3700  058E  0870               	movf	??_GetStatus,w
  3701  058F  00F2               	movwf	GetStatus@endpointNum
  3702                           
  3703                           ;Usb.c: 407: BYTE endpointDir = SetupPacket.wIndex0 & 0x80;
  3704  0590  0844               	movf	_SetupPacket+4,w	;volatile
  3705  0591  3980               	andlw	128
  3706  0592  00F0               	movwf	??_GetStatus
  3707  0593  0870               	movf	??_GetStatus,w
  3708  0594  00F3               	movwf	GetStatus@endpointDir
  3709                           
  3710                           ;Usb.c: 408: RequestHandled = 1;
  3711  0595  01BB               	clrf	_RequestHandled
  3712  0596  0ABB               	incf	_RequestHandled,f
  3713                           
  3714                           ;Usb.c: 411: inPtr = (BYTE *)&Interfaces[0].Output + (endpointNum * 8);
  3715  0597  0872               	movf	GetStatus@endpointNum,w
  3716  0598  00F0               	movwf	??_GetStatus
  3717  0599  3002               	movlw	2
  3718  059A                     u150_25:	
  3719  059A  35F0               	lslf	??_GetStatus,f
  3720  059B  3EFF               	addlw	-1
  3721  059C  1D03               	skipz
  3722  059D  2D9A               	goto	u150_25
  3723  059E  3570               	lslf	??_GetStatus,w
  3724  059F  3E20               	addlw	32
  3725  05A0  00F1               	movwf	??_GetStatus+1
  3726  05A1  0871               	movf	??_GetStatus+1,w
  3727  05A2  00BD               	movwf	_inPtr
  3728                           
  3729                           ;Usb.c: 412: if (endpointDir)
  3730  05A3  0873               	movf	GetStatus@endpointDir,w
  3731  05A4  1903               	btfsc	3,2
  3732  05A5  2DAA               	goto	i1l1587
  3733                           
  3734                           ;Usb.c: 413: inPtr += 4;
  3735  05A6  3004               	movlw	4
  3736  05A7  00F0               	movwf	??_GetStatus
  3737  05A8  0870               	movf	??_GetStatus,w
  3738  05A9  07BD               	addwf	_inPtr,f
  3739  05AA                     i1l1587:	
  3740                           
  3741                           ;Usb.c: 414: if(*inPtr & 0x04)
  3742  05AA  083D               	movf	_inPtr,w
  3743  05AB  0086               	movwf	6
  3744  05AC  0187               	clrf	7
  3745  05AD  1D01               	btfss	1,2
  3746  05AE  2DB3               	goto	i1l1591
  3747                           
  3748                           ;Usb.c: 415: ControlTransferBuffer[0] = 0x01;
  3749  05AF  3001               	movlw	1
  3750  05B0  00F0               	movwf	??_GetStatus
  3751  05B1  0870               	movf	??_GetStatus,w
  3752  05B2  00C9               	movwf	_ControlTransferBuffer	;volatile
  3753  05B3                     i1l1591:	
  3754                           
  3755                           ;Usb.c: 416: }
  3756                           ;Usb.c: 418: if (RequestHandled)
  3757  05B3  083B               	movf	_RequestHandled,w
  3758  05B4  1903               	btfsc	3,2
  3759  05B5  0008               	return
  3760                           
  3761                           ;Usb.c: 419: {
  3762                           ;Usb.c: 420: outPtr = (BYTE *)&ControlTransferBuffer;
  3763  05B6  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  3764  05B7  00F0               	movwf	??_GetStatus
  3765  05B8  0870               	movf	??_GetStatus,w
  3766  05B9  00BE               	movwf	_outPtr
  3767                           
  3768                           ;Usb.c: 421: wCount = 2;
  3769  05BA  3002               	movlw	2
  3770  05BB  00B2               	movwf	_wCount
  3771  05BC  3000               	movlw	0
  3772  05BD  00B3               	movwf	_wCount+1
  3773                           
  3774                           ;Usb.c: 422: transferType=0;
  3775  05BE  01BF               	clrf	_transferType
  3776  05BF  0008               	return
  3777  05C0                     __end_of_GetStatus:	
  3778                           
  3779                           	psect	text25
  3780  0468                     __ptext25:	
  3781 ;; *************** function _GetDescriptor *****************
  3782 ;; Defined at:
  3783 ;;		line 341 in file "Source/Usb.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  descriptorTy    1    4[COMMON] unsigned char 
  3788 ;;  descriptorIn    1    3[COMMON] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;		None               void
  3791 ;; Registers used:
  3792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;Total ram usage:        5 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_ProcessStandardRequest
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _GetDescriptor
  3813  0468                     _GetDescriptor:	
  3814                           
  3815                           ;Usb.c: 343: if(SetupPacket.bmRequestType == 0x80)
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _GetDescriptor: [wreg-fsr0h+status,2+status,0+pclath]
  3819  0468  3080               	movlw	128
  3820  0469  0020               	movlb	0	; select bank0
  3821  046A  0640               	xorwf	_SetupPacket,w	;volatile
  3822  046B  1D03               	btfss	3,2
  3823  046C  0008               	return
  3824                           
  3825                           ;Usb.c: 344: {
  3826                           ;Usb.c: 345: BYTE descriptorType = SetupPacket.wValue1;
  3827  046D  0843               	movf	_SetupPacket+3,w	;volatile
  3828  046E  00F0               	movwf	??_GetDescriptor
  3829  046F  0870               	movf	??_GetDescriptor,w
  3830  0470  00F4               	movwf	GetDescriptor@descriptorType
  3831                           
  3832                           ;Usb.c: 346: BYTE descriptorIndex = SetupPacket.wValue0;
  3833  0471  0842               	movf	_SetupPacket+2,w	;volatile
  3834  0472  00F0               	movwf	??_GetDescriptor
  3835  0473  0870               	movf	??_GetDescriptor,w
  3836  0474  00F3               	movwf	GetDescriptor@descriptorIndex
  3837                           
  3838                           ;Usb.c: 348: if (descriptorType == 0x01)
  3839  0475  0374               	decf	GetDescriptor@descriptorType,w
  3840  0476  1D03               	btfss	3,2
  3841  0477  2C85               	goto	i1l1531
  3842                           
  3843                           ;Usb.c: 349: {
  3844                           ;Usb.c: 350: RequestHandled = 1;
  3845  0478  01BB               	clrf	_RequestHandled
  3846  0479  0ABB               	incf	_RequestHandled,f
  3847                           
  3848                           ;Usb.c: 351: ROMoutPtr = (const BYTE *) & DeviceDescriptor;
  3849  047A  30DB               	movlw	low (_DeviceDescriptor| (0+32768))
  3850  047B  00B0               	movwf	_ROMoutPtr
  3851  047C  3080               	movlw	high (_DeviceDescriptor| (0+32768))
  3852  047D  00B1               	movwf	_ROMoutPtr+1
  3853                           
  3854                           ;Usb.c: 352: wCount = sizeof(DeviceDescriptor);
  3855  047E  3012               	movlw	18
  3856  047F  00B2               	movwf	_wCount
  3857  0480  3000               	movlw	0
  3858  0481  00B3               	movwf	_wCount+1
  3859                           
  3860                           ;Usb.c: 353: transferType=1;
  3861  0482  01BF               	clrf	_transferType
  3862  0483  0ABF               	incf	_transferType,f
  3863                           
  3864                           ;Usb.c: 354: }
  3865  0484  0008               	return
  3866  0485                     i1l1531:	
  3867                           
  3868                           ;Usb.c: 355: else if (descriptorType == 0x02)
  3869  0485  3002               	movlw	2
  3870  0486  0674               	xorwf	GetDescriptor@descriptorType,w
  3871  0487  1D03               	btfss	3,2
  3872  0488  2C96               	goto	i1l1539
  3873                           
  3874                           ;Usb.c: 356: {
  3875                           ;Usb.c: 357: RequestHandled = 1;
  3876  0489  01BB               	clrf	_RequestHandled
  3877  048A  0ABB               	incf	_RequestHandled,f
  3878                           
  3879                           ;Usb.c: 358: ROMoutPtr = (const BYTE*)&ConfigurationDescriptor;
  3880  048B  309A               	movlw	low (_ConfigurationDescriptor| (0+32768))
  3881  048C  00B0               	movwf	_ROMoutPtr
  3882  048D  3080               	movlw	high (_ConfigurationDescriptor| (0+32768))
  3883  048E  00B1               	movwf	_ROMoutPtr+1
  3884                           
  3885                           ;Usb.c: 359: wCount = sizeof(ConfigurationDescriptor);
  3886  048F  3029               	movlw	41
  3887  0490  00B2               	movwf	_wCount
  3888  0491  3000               	movlw	0
  3889  0492  00B3               	movwf	_wCount+1
  3890                           
  3891                           ;Usb.c: 360: transferType=1;
  3892  0493  01BF               	clrf	_transferType
  3893  0494  0ABF               	incf	_transferType,f
  3894                           
  3895                           ;Usb.c: 361: }
  3896  0495  0008               	return
  3897  0496                     i1l1539:	
  3898                           
  3899                           ;Usb.c: 362: else if (descriptorType == 0x03)
  3900  0496  3003               	movlw	3
  3901  0497  0674               	xorwf	GetDescriptor@descriptorType,w
  3902  0498  1D03               	btfss	3,2
  3903  0499  0008               	return
  3904                           
  3905                           ;Usb.c: 363: {
  3906                           ;Usb.c: 364: RequestHandled = 1;
  3907  049A  01BB               	clrf	_RequestHandled
  3908  049B  0ABB               	incf	_RequestHandled,f
  3909                           
  3910                           ;Usb.c: 365: if(descriptorIndex >= 0x03)
  3911  049C  3003               	movlw	3
  3912  049D  0273               	subwf	GetDescriptor@descriptorIndex,w
  3913  049E  1C03               	skipc
  3914  049F  2CA4               	goto	i1l1547
  3915                           
  3916                           ;Usb.c: 366: ROMoutPtr = (const BYTE*)&StringDescriptor0;
  3917  04A0  30ED               	movlw	low (_StringDescriptor0| (0+32768))
  3918  04A1  00B0               	movwf	_ROMoutPtr
  3919  04A2  3080               	movlw	high (_StringDescriptor0| (0+32768))
  3920  04A3  2CB2               	goto	L4
  3921  04A4                     i1l1547:	
  3922                           
  3923                           ;Usb.c: 367: else
  3924                           ;Usb.c: 368: ROMoutPtr = *(StringDescriptorPointers + descriptorIndex);
  3925  04A4  0873               	movf	GetDescriptor@descriptorIndex,w
  3926  04A5  00F0               	movwf	??_GetDescriptor
  3927  04A6  01F1               	clrf	??_GetDescriptor+1
  3928  04A7  35F0               	lslf	??_GetDescriptor,f
  3929  04A8  0DF1               	rlf	??_GetDescriptor+1,f
  3930  04A9  302F               	movlw	low (_StringDescriptorPointers| (0+32768))
  3931  04AA  0770               	addwf	??_GetDescriptor,w
  3932  04AB  0084               	movwf	4
  3933  04AC  3080               	movlw	high (_StringDescriptorPointers| (0+32768))
  3934  04AD  3D71               	addwfc	??_GetDescriptor+1,w
  3935  04AE  0085               	movwf	5
  3936  04AF  3F00               	moviw [0]fsr0
  3937  04B0  00B0               	movwf	_ROMoutPtr
  3938  04B1  3F01               	moviw [1]fsr0
  3939  04B2                     L4:	
  3940  04B2  00B1               	movwf	_ROMoutPtr+1
  3941                           
  3942                           ;Usb.c: 370: wCount = *ROMoutPtr;
  3943  04B3  0830               	movf	_ROMoutPtr,w
  3944  04B4  0084               	movwf	4
  3945  04B5  0831               	movf	_ROMoutPtr+1,w
  3946  04B6  0085               	movwf	5
  3947  04B7  0800               	movf	0,w	;code access
  3948  04B8  00F0               	movwf	??_GetDescriptor
  3949  04B9  01F1               	clrf	??_GetDescriptor+1
  3950  04BA  0870               	movf	??_GetDescriptor,w
  3951  04BB  00B2               	movwf	_wCount
  3952  04BC  0871               	movf	??_GetDescriptor+1,w
  3953  04BD  00B3               	movwf	_wCount+1
  3954                           
  3955                           ;Usb.c: 371: transferType=1;
  3956  04BE  01BF               	clrf	_transferType
  3957  04BF  0ABF               	incf	_transferType,f
  3958                           
  3959                           ;Usb.c: 373: else
  3960                           ;Usb.c: 374: {
  3961                           
  3962                           ;Usb.c: 372: }
  3963  04C0  0008               	return
  3964  04C1                     __end_of_GetDescriptor:	
  3965                           
  3966                           	psect	text26
  3967  01F2                     __ptext26:	
  3968 ;; *************** function _ProcessHIDRequest *****************
  3969 ;; Defined at:
  3970 ;;		line 256 in file "Source/Usb.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  descriptorTy    1    1[COMMON] unsigned char 
  3975 ;;  bRequest        1    2[COMMON] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;Total ram usage:        3 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_SetupStage
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _ProcessHIDRequest
  4000  01F2                     _ProcessHIDRequest:	
  4001                           
  4002                           ;Usb.c: 258: BYTE bRequest;
  4003                           ;Usb.c: 261: if((SetupPacket.bmRequestType & 0x1F) != 0x01 || (SetupPacket.wIndex0 != 0x
      +                          00)) return;
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _ProcessHIDRequest: [wreg+status,2+status,0]
  4007  01F2  301F               	movlw	31
  4008  01F3  0020               	movlb	0	; select bank0
  4009  01F4  0540               	andwf	_SetupPacket,w	;volatile
  4010  01F5  00F0               	movwf	??_ProcessHIDRequest
  4011  01F6  0370               	decf	??_ProcessHIDRequest,w
  4012  01F7  1D03               	btfss	3,2
  4013  01F8  0008               	return
  4014  01F9  0844               	movf	_SetupPacket+4,w	;volatile
  4015  01FA  1D03               	btfss	3,2
  4016  01FB  0008               	return
  4017                           
  4018                           ;Usb.c: 263: bRequest = SetupPacket.bRequest;
  4019  01FC  0841               	movf	_SetupPacket+1,w	;volatile
  4020  01FD  00F0               	movwf	??_ProcessHIDRequest
  4021  01FE  0870               	movf	??_ProcessHIDRequest,w
  4022  01FF  00F2               	movwf	ProcessHIDRequest@bRequest
  4023                           
  4024                           ;Usb.c: 265: if (bRequest == 0x06)
  4025  0200  3006               	movlw	6
  4026  0201  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4027  0202  1D03               	btfss	3,2
  4028  0203  2A24               	goto	i1l1679
  4029                           
  4030                           ;Usb.c: 266: {
  4031                           ;Usb.c: 268: BYTE descriptorType = SetupPacket.wValue1;
  4032  0204  0843               	movf	_SetupPacket+3,w	;volatile
  4033  0205  00F0               	movwf	??_ProcessHIDRequest
  4034  0206  0870               	movf	??_ProcessHIDRequest,w
  4035  0207  00F1               	movwf	ProcessHIDRequest@descriptorType
  4036                           
  4037                           ;Usb.c: 269: if (descriptorType == 0x21)
  4038  0208  3021               	movlw	33
  4039  0209  0671               	xorwf	ProcessHIDRequest@descriptorType,w
  4040  020A  1D03               	btfss	3,2
  4041  020B  2A14               	goto	i1l1667
  4042                           
  4043                           ;Usb.c: 270: {
  4044                           ;Usb.c: 271: RequestHandled = 1;
  4045  020C  01BB               	clrf	_RequestHandled
  4046  020D  0ABB               	incf	_RequestHandled,f
  4047                           
  4048                           ;Usb.c: 272: ROMoutPtr = (const BYTE*)&ConfigurationDescriptor.HIDDescriptor;
  4049  020E  30A3               	movlw	low ((_ConfigurationDescriptor| (0+32768)+9))
  4050  020F  00B0               	movwf	_ROMoutPtr
  4051  0210  3080               	movlw	high ((_ConfigurationDescriptor| (0+32768)+9))
  4052  0211  00B1               	movwf	_ROMoutPtr+1
  4053                           
  4054                           ;Usb.c: 273: wCount = sizeof(ConfigurationDescriptor.HIDDescriptor);
  4055  0212  3020               	movlw	32
  4056  0213  2A1F               	goto	L5
  4057  0214                     i1l1667:	
  4058                           ;Usb.c: 275: }
  4059                           
  4060                           ;Usb.c: 274: transferType=1;
  4061                           
  4062                           
  4063                           ;Usb.c: 276: else if (descriptorType == 0x22)
  4064  0214  3022               	movlw	34
  4065  0215  0671               	xorwf	ProcessHIDRequest@descriptorType,w
  4066  0216  1D03               	btfss	3,2
  4067  0217  2A24               	goto	i1l1679
  4068                           
  4069                           ;Usb.c: 277: {
  4070                           ;Usb.c: 278: RequestHandled = 1;
  4071  0218  01BB               	clrf	_RequestHandled
  4072  0219  0ABB               	incf	_RequestHandled,f
  4073                           
  4074                           ;Usb.c: 279: ROMoutPtr = (const BYTE*)HIDReport;
  4075  021A  306B               	movlw	low (_HIDReport| (0+32768))
  4076  021B  00B0               	movwf	_ROMoutPtr
  4077  021C  3080               	movlw	high (_HIDReport| (0+32768))
  4078  021D  00B1               	movwf	_ROMoutPtr+1
  4079                           
  4080                           ;Usb.c: 280: wCount = sizeof(HIDReport);
  4081  021E  302F               	movlw	47
  4082  021F                     L5:	
  4083  021F  00B2               	movwf	_wCount
  4084  0220  3000               	movlw	0
  4085  0221  00B3               	movwf	_wCount+1
  4086                           
  4087                           ;Usb.c: 281: transferType=1;
  4088  0222  01BF               	clrf	_transferType
  4089  0223  0ABF               	incf	_transferType,f
  4090  0224                     i1l1679:	
  4091                           ;Usb.c: 286: else
  4092                           ;Usb.c: 287: {
  4093                           
  4094                           ;Usb.c: 284: {
  4095                           ;Usb.c: 285: }
  4096                           
  4097                           ;Usb.c: 282: }
  4098                           
  4099                           
  4100                           ;Usb.c: 288: }
  4101                           ;Usb.c: 289: }
  4102                           ;Usb.c: 291: if ((SetupPacket.bmRequestType & 0x60) != 0x20)
  4103  0224  3060               	movlw	96
  4104  0225  0540               	andwf	_SetupPacket,w	;volatile
  4105  0226  00F0               	movwf	??_ProcessHIDRequest
  4106  0227  3020               	movlw	32
  4107  0228  0670               	xorwf	??_ProcessHIDRequest,w
  4108  0229  1D03               	btfss	3,2
  4109  022A  0008               	return
  4110                           
  4111                           ;Usb.c: 294: }
  4112                           ;Usb.c: 297: if (bRequest == 0x01)
  4113                           
  4114                           ;Usb.c: 292: {
  4115                           ;Usb.c: 293: return;
  4116  022B  0372               	decf	ProcessHIDRequest@bRequest,w
  4117  022C  1903               	btfsc	3,2
  4118  022D  0008               	return
  4119                           
  4120                           ;Usb.c: 301: else if (bRequest == 0x09)
  4121                           
  4122                           ;Usb.c: 298: {
  4123                           ;Usb.c: 299: }
  4124  022E  3009               	movlw	9
  4125  022F  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4126  0230  1D03               	btfss	3,2
  4127  0231  2A37               	goto	i1l1691
  4128                           
  4129                           ;Usb.c: 302: {
  4130                           ;Usb.c: 303: HIDPostProcess = 1;
  4131  0232  01B8               	clrf	_HIDPostProcess
  4132  0233  0AB8               	incf	_HIDPostProcess,f
  4133                           
  4134                           ;Usb.c: 304: RequestHandled = 1;
  4135  0234  01BB               	clrf	_RequestHandled
  4136  0235  0ABB               	incf	_RequestHandled,f
  4137                           
  4138                           ;Usb.c: 305: }
  4139  0236  0008               	return
  4140  0237                     i1l1691:	
  4141                           
  4142                           ;Usb.c: 307: else if (bRequest == 0x02)
  4143  0237  3002               	movlw	2
  4144  0238  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4145  0239  1D03               	btfss	3,2
  4146  023A  2A47               	goto	i1l1699
  4147                           
  4148                           ;Usb.c: 308: {
  4149                           ;Usb.c: 309: RequestHandled = 1;
  4150  023B  01BB               	clrf	_RequestHandled
  4151  023C  0ABB               	incf	_RequestHandled,f
  4152                           
  4153                           ;Usb.c: 310: outPtr = &HidIdleRate;
  4154  023D  3062               	movlw	(low (_HidIdleRate| 0))& (0+255)
  4155  023E  00F0               	movwf	??_ProcessHIDRequest
  4156  023F  0870               	movf	??_ProcessHIDRequest,w
  4157  0240  00BE               	movwf	_outPtr
  4158                           
  4159                           ;Usb.c: 311: wCount = 1;
  4160  0241  3001               	movlw	1
  4161  0242  00B2               	movwf	_wCount
  4162  0243  3000               	movlw	0
  4163  0244  00B3               	movwf	_wCount+1
  4164                           
  4165                           ;Usb.c: 312: transferType=0;
  4166  0245  01BF               	clrf	_transferType
  4167                           
  4168                           ;Usb.c: 313: }
  4169  0246  0008               	return
  4170  0247                     i1l1699:	
  4171                           
  4172                           ;Usb.c: 315: else if (bRequest == 0x0A)
  4173  0247  300A               	movlw	10
  4174  0248  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4175  0249  1D03               	btfss	3,2
  4176  024A  2A52               	goto	i1l1705
  4177                           
  4178                           ;Usb.c: 316: {
  4179                           ;Usb.c: 317: RequestHandled = 1;
  4180  024B  01BB               	clrf	_RequestHandled
  4181  024C  0ABB               	incf	_RequestHandled,f
  4182                           
  4183                           ;Usb.c: 318: HidIdleRate = SetupPacket.wValue1;
  4184  024D  0843               	movf	_SetupPacket+3,w	;volatile
  4185  024E  00F0               	movwf	??_ProcessHIDRequest
  4186  024F  0870               	movf	??_ProcessHIDRequest,w
  4187  0250  00E2               	movwf	_HidIdleRate
  4188                           
  4189                           ;Usb.c: 319: }
  4190  0251  0008               	return
  4191  0252                     i1l1705:	
  4192                           
  4193                           ;Usb.c: 321: else if (bRequest == 0x03)
  4194  0252  3003               	movlw	3
  4195  0253  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4196  0254  1D03               	btfss	3,2
  4197  0255  2A62               	goto	i1l1713
  4198                           
  4199                           ;Usb.c: 322: {
  4200                           ;Usb.c: 323: RequestHandled = 1;
  4201  0256  01BB               	clrf	_RequestHandled
  4202  0257  0ABB               	incf	_RequestHandled,f
  4203                           
  4204                           ;Usb.c: 324: outPtr = &HidProtocol;
  4205  0258  3063               	movlw	(low (_HidProtocol| 0))& (0+255)
  4206  0259  00F0               	movwf	??_ProcessHIDRequest
  4207  025A  0870               	movf	??_ProcessHIDRequest,w
  4208  025B  00BE               	movwf	_outPtr
  4209                           
  4210                           ;Usb.c: 325: wCount = 1;
  4211  025C  3001               	movlw	1
  4212  025D  00B2               	movwf	_wCount
  4213  025E  3000               	movlw	0
  4214  025F  00B3               	movwf	_wCount+1
  4215                           
  4216                           ;Usb.c: 326: transferType=0;
  4217  0260  01BF               	clrf	_transferType
  4218                           
  4219                           ;Usb.c: 327: }
  4220  0261  0008               	return
  4221  0262                     i1l1713:	
  4222                           
  4223                           ;Usb.c: 329: else if (bRequest == 0x0B)
  4224  0262  300B               	movlw	11
  4225  0263  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4226  0264  1D03               	btfss	3,2
  4227  0265  0008               	return
  4228                           
  4229                           ;Usb.c: 330: {
  4230                           ;Usb.c: 331: RequestHandled = 1;
  4231  0266  01BB               	clrf	_RequestHandled
  4232  0267  0ABB               	incf	_RequestHandled,f
  4233                           
  4234                           ;Usb.c: 332: HidProtocol = SetupPacket.wValue0;
  4235  0268  0842               	movf	_SetupPacket+2,w	;volatile
  4236  0269  00F0               	movwf	??_ProcessHIDRequest
  4237  026A  0870               	movf	??_ProcessHIDRequest,w
  4238  026B  00E3               	movwf	_HidProtocol
  4239                           
  4240                           ;Usb.c: 335: else
  4241                           ;Usb.c: 336: {
  4242                           
  4243                           ;Usb.c: 333: }
  4244  026C  0008               	return
  4245  026D                     __end_of_ProcessHIDRequest:	
  4246                           
  4247                           	psect	text27
  4248  0175                     __ptext27:	
  4249 ;; *************** function _InDataStage *****************
  4250 ;; Defined at:
  4251 ;;		line 561 in file "Source/Usb.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  bufferSize      2    3[COMMON] unsigned short 
  4256 ;;  i               1    2[COMMON] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;Total ram usage:        5 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_SetupStage
  4276 ;;		_ProcessControlTransfer
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _InDataStage
  4282  0175                     _InDataStage:	
  4283                           
  4284                           ;Usb.c: 563: BYTE i;
  4285                           ;Usb.c: 564: WORD bufferSize;
  4286                           ;Usb.c: 567: if(wCount < 0x08)
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _InDataStage: [wreg-fsr1h+status,2+status,0+pclath]
  4290  0175  3000               	movlw	0
  4291  0176  0020               	movlb	0	; select bank0
  4292  0177  0233               	subwf	_wCount+1,w
  4293  0178  3008               	movlw	8
  4294  0179  1903               	skipnz
  4295  017A  0232               	subwf	_wCount,w
  4296  017B  1803               	skipnc
  4297  017C  2982               	goto	i1l1793
  4298                           
  4299                           ;Usb.c: 568: bufferSize = wCount;
  4300  017D  0833               	movf	_wCount+1,w
  4301  017E  00F4               	movwf	InDataStage@bufferSize+1
  4302  017F  0832               	movf	_wCount,w
  4303  0180  00F3               	movwf	InDataStage@bufferSize
  4304  0181  2986               	goto	i1l1795
  4305  0182                     i1l1793:	
  4306                           
  4307                           ;Usb.c: 569: else
  4308                           ;Usb.c: 570: bufferSize = 0x08;
  4309  0182  3008               	movlw	8
  4310  0183  00F3               	movwf	InDataStage@bufferSize
  4311  0184  3000               	movlw	0
  4312  0185  00F4               	movwf	InDataStage@bufferSize+1
  4313  0186                     i1l1795:	
  4314                           
  4315                           ;Usb.c: 573: Interfaces[0].Input.Stat &= ~(0x01 | 0x02);
  4316  0186  30FC               	movlw	252
  4317  0187  00F0               	movwf	??_InDataStage
  4318  0188  0870               	movf	??_InDataStage,w
  4319  0189  05A4               	andwf	36,f	;volatile
  4320                           
  4321                           ;Usb.c: 574: Interfaces[0].Input.Stat |= (BYTE)((bufferSize & 0x0300) >> 8);
  4322  018A  0874               	movf	InDataStage@bufferSize+1,w
  4323  018B  3903               	andlw	3
  4324  018C  00F0               	movwf	??_InDataStage
  4325  018D  0870               	movf	??_InDataStage,w
  4326  018E  04A4               	iorwf	36,f	;volatile
  4327                           
  4328                           ;Usb.c: 575: Interfaces[0].Input.Cnt = (BYTE)(bufferSize & 0xFF);
  4329  018F  0873               	movf	InDataStage@bufferSize,w
  4330  0190  00F0               	movwf	??_InDataStage
  4331  0191  0870               	movf	??_InDataStage,w
  4332  0192  00A5               	movwf	37	;volatile
  4333                           
  4334                           ;Usb.c: 576: Interfaces[0].Input.ADDR = ((unsigned int)(((unsigned long)&ControlTransfer
      +                          Buffer) & 0xFFFF));
  4335  0193  3049               	movlw	low _ControlTransferBuffer
  4336  0194  00A6               	movwf	38	;volatile
  4337  0195  3000               	movlw	high _ControlTransferBuffer
  4338  0196  00A7               	movwf	39	;volatile
  4339                           
  4340                           ;Usb.c: 581: wCount = wCount - bufferSize;
  4341  0197  0973               	comf	InDataStage@bufferSize,w
  4342  0198  00F0               	movwf	??_InDataStage
  4343  0199  0974               	comf	InDataStage@bufferSize+1,w
  4344  019A  00F1               	movwf	??_InDataStage+1
  4345  019B  0AF0               	incf	??_InDataStage,f
  4346  019C  1903               	skipnz
  4347  019D  0AF1               	incf	??_InDataStage+1,f
  4348  019E  0832               	movf	_wCount,w
  4349  019F  0770               	addwf	??_InDataStage,w
  4350  01A0  00B2               	movwf	_wCount
  4351  01A1  0833               	movf	_wCount+1,w
  4352  01A2  3D71               	addwfc	??_InDataStage+1,w
  4353  01A3  00B3               	movwf	_wCount+1
  4354                           
  4355                           ;Usb.c: 584: inPtr = (BYTE *)&ControlTransferBuffer;
  4356  01A4  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  4357  01A5  00F0               	movwf	??_InDataStage
  4358  01A6  0870               	movf	??_InDataStage,w
  4359  01A7  00BD               	movwf	_inPtr
  4360                           
  4361                           ;Usb.c: 585: if(transferType==1) for(i=0;i<bufferSize;i++) *inPtr++ = *ROMoutPtr++;
  4362  01A8  033F               	decf	_transferType,w
  4363  01A9  1D03               	btfss	3,2
  4364  01AA  29CF               	goto	i1l1817
  4365  01AB  01F2               	clrf	InDataStage@i
  4366  01AC                     i1l1815:	
  4367  01AC  0872               	movf	InDataStage@i,w
  4368  01AD  00F0               	movwf	??_InDataStage
  4369  01AE  01F1               	clrf	??_InDataStage+1
  4370  01AF  0874               	movf	InDataStage@bufferSize+1,w
  4371  01B0  0271               	subwf	??_InDataStage+1,w
  4372  01B1  1D03               	skipz
  4373  01B2  29B5               	goto	u191_25
  4374  01B3  0873               	movf	InDataStage@bufferSize,w
  4375  01B4  0270               	subwf	??_InDataStage,w
  4376  01B5                     u191_25:	
  4377  01B5  1803               	btfsc	3,0
  4378  01B6  0008               	return
  4379  01B7  0830               	movf	_ROMoutPtr,w
  4380  01B8  0084               	movwf	4
  4381  01B9  0831               	movf	_ROMoutPtr+1,w
  4382  01BA  0085               	movwf	5
  4383  01BB  0800               	movf	0,w	;code access
  4384  01BC  00F0               	movwf	??_InDataStage
  4385  01BD  083D               	movf	_inPtr,w
  4386  01BE  0086               	movwf	6
  4387  01BF  0187               	clrf	7
  4388  01C0  0870               	movf	??_InDataStage,w
  4389  01C1  0081               	movwf	1
  4390  01C2  3001               	movlw	1
  4391  01C3  07B0               	addwf	_ROMoutPtr,f
  4392  01C4  3000               	movlw	0
  4393  01C5  3DB1               	addwfc	_ROMoutPtr+1,f
  4394  01C6  3001               	movlw	1
  4395  01C7  00F0               	movwf	??_InDataStage
  4396  01C8  0870               	movf	??_InDataStage,w
  4397  01C9  07BD               	addwf	_inPtr,f
  4398  01CA  3001               	movlw	1
  4399  01CB  00F0               	movwf	??_InDataStage
  4400  01CC  0870               	movf	??_InDataStage,w
  4401  01CD  07F2               	addwf	InDataStage@i,f
  4402  01CE  29AC               	goto	i1l1815
  4403  01CF                     i1l1817:	
  4404                           
  4405                           ;Usb.c: 586: else for(i=0;i<bufferSize;i++) *inPtr++ = *outPtr++;
  4406  01CF  01F2               	clrf	InDataStage@i
  4407  01D0                     i1l1827:	
  4408  01D0  0872               	movf	InDataStage@i,w
  4409  01D1  00F0               	movwf	??_InDataStage
  4410  01D2  01F1               	clrf	??_InDataStage+1
  4411  01D3  0874               	movf	InDataStage@bufferSize+1,w
  4412  01D4  0271               	subwf	??_InDataStage+1,w
  4413  01D5  1D03               	skipz
  4414  01D6  29D9               	goto	u192_25
  4415  01D7  0873               	movf	InDataStage@bufferSize,w
  4416  01D8  0270               	subwf	??_InDataStage,w
  4417  01D9                     u192_25:	
  4418  01D9  1803               	btfsc	3,0
  4419  01DA  0008               	return
  4420  01DB  083E               	movf	_outPtr,w
  4421  01DC  0086               	movwf	6
  4422  01DD  0187               	clrf	7
  4423  01DE  0801               	movf	1,w
  4424  01DF  00F0               	movwf	??_InDataStage
  4425  01E0  083D               	movf	_inPtr,w
  4426  01E1  0086               	movwf	6
  4427  01E2  0187               	clrf	7
  4428  01E3  0870               	movf	??_InDataStage,w
  4429  01E4  0081               	movwf	1
  4430  01E5  3001               	movlw	1
  4431  01E6  00F0               	movwf	??_InDataStage
  4432  01E7  0870               	movf	??_InDataStage,w
  4433  01E8  07BE               	addwf	_outPtr,f
  4434  01E9  3001               	movlw	1
  4435  01EA  00F0               	movwf	??_InDataStage
  4436  01EB  0870               	movf	??_InDataStage,w
  4437  01EC  07BD               	addwf	_inPtr,f
  4438  01ED  3001               	movlw	1
  4439  01EE  00F0               	movwf	??_InDataStage
  4440  01EF  0870               	movf	??_InDataStage,w
  4441  01F0  07F2               	addwf	InDataStage@i,f
  4442  01F1  29D0               	goto	i1l1827
  4443  01F2                     __end_of_InDataStage:	
  4444                           
  4445                           	psect	text28
  4446  05C0                     __ptext28:	
  4447 ;; *************** function _OutDataStage *****************
  4448 ;; Defined at:
  4449 ;;		line 590 in file "Source/Usb.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  bufferSize      2    3[COMMON] unsigned short 
  4454 ;;  i               2    1[COMMON] unsigned short 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;Total ram usage:        5 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_ProcessControlTransfer
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function _OutDataStage
  4479  05C0                     _OutDataStage:	
  4480                           
  4481                           ;Usb.c: 592: WORD i, bufferSize;
  4482                           ;Usb.c: 594: bufferSize = ((0x03 & Interfaces[0].Output.Stat) << 8) | Interfaces[0].Outp
      +                          ut.Cnt;
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _OutDataStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  4486  05C0  3003               	movlw	3
  4487  05C1  0020               	movlb	0	; select bank0
  4488  05C2  0520               	andwf	32,w	;volatile
  4489  05C3  00F0               	movwf	??_OutDataStage
  4490  05C4  0870               	movf	??_OutDataStage,w
  4491  05C5  00F4               	movwf	OutDataStage@bufferSize+1
  4492  05C6  0821               	movf	33,w	;volatile
  4493  05C7  00F3               	movwf	OutDataStage@bufferSize
  4494                           
  4495                           ;Usb.c: 597: wCount = wCount + bufferSize;
  4496  05C8  0873               	movf	OutDataStage@bufferSize,w
  4497  05C9  0732               	addwf	_wCount,w
  4498  05CA  00B2               	movwf	_wCount
  4499  05CB  0874               	movf	OutDataStage@bufferSize+1,w
  4500  05CC  3D33               	addwfc	_wCount+1,w
  4501  05CD  00B3               	movwf	_wCount+1
  4502                           
  4503                           ;Usb.c: 599: outPtr = (BYTE*)&ControlTransferBuffer;
  4504  05CE  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  4505  05CF  00F0               	movwf	??_OutDataStage
  4506  05D0  0870               	movf	??_OutDataStage,w
  4507  05D1  00BE               	movwf	_outPtr
  4508                           
  4509                           ;Usb.c: 601: for (i=0;i<bufferSize;i++)
  4510  05D2  01F1               	clrf	OutDataStage@i
  4511  05D3  01F2               	clrf	OutDataStage@i+1
  4512  05D4                     i1l1889:	
  4513  05D4  0874               	movf	OutDataStage@bufferSize+1,w
  4514  05D5  0272               	subwf	OutDataStage@i+1,w
  4515  05D6  1D03               	skipz
  4516  05D7  2DDA               	goto	u214_25
  4517  05D8  0873               	movf	OutDataStage@bufferSize,w
  4518  05D9  0271               	subwf	OutDataStage@i,w
  4519  05DA                     u214_25:	
  4520  05DA  1803               	btfsc	3,0
  4521  05DB  0008               	return
  4522                           
  4523                           ;Usb.c: 602: {
  4524                           ;Usb.c: 603: *inPtr++ = *outPtr++;
  4525  05DC  083E               	movf	_outPtr,w
  4526  05DD  0086               	movwf	6
  4527  05DE  0187               	clrf	7
  4528  05DF  0801               	movf	1,w
  4529  05E0  00F0               	movwf	??_OutDataStage
  4530  05E1  083D               	movf	_inPtr,w
  4531  05E2  0086               	movwf	6
  4532  05E3  0187               	clrf	7
  4533  05E4  0870               	movf	??_OutDataStage,w
  4534  05E5  0081               	movwf	1
  4535  05E6  3001               	movlw	1
  4536  05E7  00F0               	movwf	??_OutDataStage
  4537  05E8  0870               	movf	??_OutDataStage,w
  4538  05E9  07BE               	addwf	_outPtr,f
  4539  05EA  3001               	movlw	1
  4540  05EB  00F0               	movwf	??_OutDataStage
  4541  05EC  0870               	movf	??_OutDataStage,w
  4542  05ED  07BD               	addwf	_inPtr,f
  4543  05EE  3001               	movlw	1
  4544  05EF  07F1               	addwf	OutDataStage@i,f
  4545  05F0  3000               	movlw	0
  4546  05F1  3DF2               	addwfc	OutDataStage@i+1,f
  4547  05F2  2DD4               	goto	i1l1889
  4548  05F3                     __end_of_OutDataStage:	
  4549                           
  4550                           	psect	text29
  4551  0655                     __ptext29:	
  4552 ;; *************** function _BusReset *****************
  4553 ;; Defined at:
  4554 ;;		line 831 in file "Source/Usb.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;		None               void
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;Total ram usage:        1 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    1
  4575 ;; This function calls:
  4576 ;;		_WaitForSetupStage
  4577 ;; This function is called by:
  4578 ;;		_ProcessUSBTransactions
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _BusReset
  4584  0655                     _BusReset:	
  4585                           
  4586                           ;Usb.c: 833: UEIR = 0x00;
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _BusReset: [wreg+status,2+status,0+pclath+cstack]
  4590  0655  003D               	movlb	29	; select bank29
  4591  0656  0193               	clrf	19	;volatile
  4592                           
  4593                           ;Usb.c: 834: UIR = 0x00;
  4594  0657  0190               	clrf	16	;volatile
  4595                           
  4596                           ;Usb.c: 835: UEIE = 0x9f;
  4597  0658  309F               	movlw	159
  4598  0659  0097               	movwf	23	;volatile
  4599                           
  4600                           ;Usb.c: 836: UIE = 0x7b;
  4601  065A  307B               	movlw	123
  4602  065B  0092               	movwf	18	;volatile
  4603                           
  4604                           ;Usb.c: 837: UADDR = 0x00;
  4605  065C  0196               	clrf	22	;volatile
  4606                           
  4607                           ;Usb.c: 840: UEP0 = 0x16;
  4608  065D  3016               	movlw	22
  4609  065E  0098               	movwf	24	;volatile
  4610  065F                     i1l387:	
  4611                           ;Usb.c: 843: while (UIRbits.TRNIF == 1) UIRbits.TRNIF = 0;
  4612                           
  4613  065F  1D90               	btfss	16,3	;volatile
  4614  0660  2E63               	goto	i1l389
  4615  0661  1190               	bcf	16,3	;volatile
  4616  0662  2E5F               	goto	i1l387
  4617  0663                     i1l389:	
  4618                           
  4619                           ;Usb.c: 846: UCONbits.PKTDIS = 0;
  4620  0663  120E               	bcf	14,4	;volatile
  4621                           
  4622                           ;Usb.c: 849: WaitForSetupStage();
  4623  0664  3186  26DF         	fcall	_WaitForSetupStage
  4624                           
  4625                           ;Usb.c: 851: RemoteWakeup = 0;
  4626  0666  0020               	movlb	0	; select bank0
  4627  0667  01BA               	clrf	_RemoteWakeup
  4628                           
  4629                           ;Usb.c: 852: SelfPowered = 0;
  4630  0668  01BC               	clrf	_SelfPowered
  4631                           
  4632                           ;Usb.c: 853: CurrentConfiguration = 0;
  4633  0669  01E1               	clrf	_CurrentConfiguration
  4634                           
  4635                           ;Usb.c: 854: DeviceState = 0x03;
  4636  066A  3003               	movlw	3
  4637  066B  00F1               	movwf	??_BusReset
  4638  066C  0871               	movf	??_BusReset,w
  4639  066D  00B7               	movwf	_DeviceState
  4640  066E  0008               	return
  4641  066F                     __end_of_BusReset:	
  4642                           
  4643                           	psect	text30
  4644  06DF                     __ptext30:	
  4645 ;; *************** function _WaitForSetupStage *****************
  4646 ;; Defined at:
  4647 ;;		line 678 in file "Source/Usb.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;Total ram usage:        1 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_ProcessControlTransfer
  4671 ;;		_Stall
  4672 ;;		_BusReset
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _WaitForSetupStage
  4678  06DF                     _WaitForSetupStage:	
  4679                           
  4680                           ;Usb.c: 680: CtrlTransferStage = 0x00;
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _WaitForSetupStage: [wreg+status,2+status,0]
  4684  06DF  0020               	movlb	0	; select bank0
  4685  06E0  01B5               	clrf	_CtrlTransferStage
  4686                           
  4687                           ;Usb.c: 681: Interfaces[0].Output.Cnt = 0x08;
  4688  06E1  3008               	movlw	8
  4689  06E2  00A1               	movwf	33	;volatile
  4690                           
  4691                           ;Usb.c: 682: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  4692  06E3  3040               	movlw	low _SetupPacket
  4693  06E4  00A2               	movwf	34	;volatile
  4694  06E5  3000               	movlw	high _SetupPacket
  4695  06E6  00A3               	movwf	35	;volatile
  4696                           
  4697                           ;Usb.c: 683: Interfaces[0].Output.Stat = 0x80 | 0x08;
  4698  06E7  3088               	movlw	136
  4699  06E8  00F0               	movwf	??_WaitForSetupStage
  4700  06E9  0870               	movf	??_WaitForSetupStage,w
  4701  06EA  00A0               	movwf	32	;volatile
  4702                           
  4703                           ;Usb.c: 684: Interfaces[0].Input.Stat = 0x00;
  4704  06EB  01A4               	clrf	36	;volatile
  4705  06EC  0008               	return
  4706  06ED                     __end_of_WaitForSetupStage:	
  4707  007E                     btemp	set	126	;btemp
  4708  007E                     int$flags	set	126
  4709  007E                     wtemp	set	126
  4710  007E                     wtemp0	set	126
  4711  0080                     wtemp1	set	128
  4712  0082                     wtemp2	set	130
  4713  0084                     wtemp3	set	132
  4714  0086                     wtemp4	set	134
  4715  0088                     wtemp5	set	136
  4716  007F                     wtemp6	set	127
  4717  007E                     ttemp	set	126
  4718  007E                     ttemp0	set	126
  4719  0081                     ttemp1	set	129
  4720  0084                     ttemp2	set	132
  4721  0087                     ttemp3	set	135
  4722  007F                     ttemp4	set	127
  4723  007E                     ltemp	set	126
  4724  007E                     ltemp0	set	126
  4725  0082                     ltemp1	set	130
  4726  0086                     ltemp2	set	134
  4727  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    194
    Data        4
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            64      3      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    inPtr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), ControlTransferBuffer(BANK0[8]), Interfaces.Output(BANK0[4]), Interfaces(BANK0[16]), 

    outPtr	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), CurrentConfiguration(BANK0[1]), ControlTransferBuffer(BANK0[8]), HidProtocol(BANK0[1]), 
		 -> HidIdleRate(BANK0[1]), 

    ROMoutPtr	PTR const unsigned char  size(2) Largest target is 8192
		 -> DeviceDescriptor(CODE[18]), HIDReport(CODE[47]), ROM(CODE[8192]), StringDescriptor2(CODE[54]), 
		 -> StringDescriptor1(CODE[24]), StringDescriptor0(CODE[4]), ConfigurationDescriptor.HIDDescriptor(CODE[32]), ConfigurationDescriptor(CODE[41]), 

    StringDescriptorPointers	const PTR const unsigned char [3] size(2) Largest target is 54
		 -> StringDescriptor2(CODE[54]), StringDescriptor1(CODE[24]), StringDescriptor0(CODE[4]), 

    S19_BufferInfo$Buffer	PTR unsigned char  size(1) Largest target is 8
		 -> HIDRxBuffer(BANK0[8]), HIDTxBuffer(BANK0[8]), 

    Buffers.Buffer	PTR unsigned char  size(1) Largest target is 8
		 -> HIDRxBuffer(BANK0[8]), HIDTxBuffer(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ProcessUSBTransactions
    _ProcessUSBTransactions->_ProcessControlTransfer
    _Stall->_WaitForSetupStage
    _ProcessControlTransfer->_SetupStage
    _SetupStage->_ProcessStandardRequest
    _ProcessStandardRequest->_SetFeature
    _BusReset->_WaitForSetupStage

Critical Paths under _main in BANK0

    _ProcessIO->_HIDSend
    _CheckUsb->_HIDSend
    _CheckUsb->_ReArmInterface
    _ProcessIncommingData->_PrepareTxBuffer

Critical Paths under _ISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     598
                   _EnableInterrupts
                    _EnableUSBModule
                   _InitializeSystem
                      _InitializeUSB
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            0     0      0     598
                           _CheckUsb
                            _HIDSend
                    _PrepareTxBuffer
 ---------------------------------------------------------------------------------
 (2) _CheckUsb                                             0     0      0     398
                            _HIDSend
                 _IsUsbDataAvaialble
               _ProcessIncommingData
                     _ReArmInterface
 ---------------------------------------------------------------------------------
 (3) _ReArmInterface                                       3     3      0     132
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ProcessIncommingData                                 0     0      0      68
                    _PrepareTxBuffer
 ---------------------------------------------------------------------------------
 (2) _PrepareTxBuffer                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _IsUsbDataAvaialble                                   2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _HIDSend                                              3     3      0     132
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitializeUSB                                        0     0      0       0
                     _ResetPPBuffers
 ---------------------------------------------------------------------------------
 (2) _ResetPPBuffers                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableUSBModule                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISRCode                                              1     1      0    1527
                                             13 COMMON     1     1      0
             _ProcessUSBTransactions
 ---------------------------------------------------------------------------------
 (6) _ProcessUSBTransactions                               1     1      0    1527
                                             12 COMMON     1     1      0
                           _BusReset
             _ProcessControlTransfer
                              _Stall
                       _StartOfFrame
                            _Suspend
                          _UnSuspend
 ---------------------------------------------------------------------------------
 (7) _UnSuspend                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Suspend                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _StartOfFrame                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Stall                                                0     0      0       0
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (7) _ProcessControlTransfer                               3     3      0    1527
                                              9 COMMON     3     3      0
                        _InDataStage
                       _OutDataStage
                         _SetupStage
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (8) _SetupStage                                           1     1      0    1275
                                              8 COMMON     1     1      0
                        _InDataStage
                  _ProcessHIDRequest
             _ProcessStandardRequest
 ---------------------------------------------------------------------------------
 (9) _ProcessStandardRequest                               2     2      0     893
                                              6 COMMON     2     2      0
                      _GetDescriptor
                          _GetStatus
                   _HIDInitEndpoints
                         _SetFeature
 ---------------------------------------------------------------------------------
 (10) _SetFeature                                          6     6      0     180
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (10) _HIDInitEndpoints                                    5     5      0     245
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _GetStatus                                           5     5      0     113
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _GetDescriptor                                       5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (9) _ProcessHIDRequest                                    3     3      0     222
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _InDataStage                                          5     5      0     160
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) _OutDataStage                                         5     5      0      69
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (7) _BusReset                                             1     1      0       0
                                              1 COMMON     1     1      0
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (8) _WaitForSetupStage                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnableInterrupts
   _EnableUSBModule
   _InitializeSystem
   _InitializeUSB
     _ResetPPBuffers
   _ProcessIO
     _CheckUsb
       _HIDSend
       _IsUsbDataAvaialble
       _ProcessIncommingData
         _PrepareTxBuffer
       _ReArmInterface
     _HIDSend
     _PrepareTxBuffer

 _ISRCode (ROOT)
   _ProcessUSBTransactions
     _BusReset
       _WaitForSetupStage
     _ProcessControlTransfer
       _InDataStage
       _OutDataStage
       _SetupStage
         _InDataStage
         _ProcessHIDRequest
         _ProcessStandardRequest
           _GetDescriptor
           _GetStatus
           _HIDInitEndpoints
           _SetFeature
       _WaitForSetupStage
     _Stall
       _WaitForSetupStage
     _StartOfFrame
     _Suspend
     _UnSuspend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            40      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               40      3      3B       5       92.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      49      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      49      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon May 01 18:08:37 2017

                     __CFG_CP$OFF 0000        __size_of_WaitForSetupStage 000E            __end_of_ResetPPBuffers 071C  
                              l86 0696        __end_of_IsUsbDataAvaialble 0618          __end_of_EnableInterrupts 06FE  
                             l368 0678                               _RC2 0072                               _RC3 0073  
                             _UIE 0E92                               _UIR 0E90                      __CFG_BORV$LO 0000  
                             wreg 0009                      _transferType 003F                   __end_of_HIDSend 056C  
                    __CFG_LVP$OFF 0000                              l2141 0642                              l2187 06CC  
                            l1833 068D                              l1853 0616                              l1847 05FA  
                            l1839 0697                              l1863 0506                              l1873 055B  
                            u2005 04C6                              u2105 053F                              u2025 04DC  
                            u2035 04EA                              u2125 054F                              u2135 0560  
                            u2055 04FA                              _LATC 010E                              u2065 050B  
                            u2075 051C                              u2095 0531                              u1975 05FD  
                            u1995 060B                              i1l70 000D                              _UCFG 0E91  
                            _UEP0 0E98                              _UEIE 0E97                              _UEIR 0E93  
                            _UCON 0E8E                   __end_of_ISRCode 0012                      __CFG_WRT$OFF 0000  
                            _main 06C0             __end_of_GetDescriptor 04C1                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
            _CurrentConfiguration 0061                     __CFG_BOREN$ON 0000                              ltemp 007E  
                            start 0012                              ttemp 007E                              wtemp 007E  
                   __CFG_IESO$OFF 0000            __size_of_InitializeUSB 000F                 ??_EnableUSBModule 0068  
                _HIDInitEndpoints 00F1                   ?_ResetPPBuffers 0070     IsUsbDataAvaialble@InterfaceNo 0069  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                   __end_of_Suspend 070E  
                           i1l402 033B                             i1l331 0396                             i1l329 036D  
                           i1l274 03EE                             i1l393 02EA                             i1l387 065F  
                           i1l396 02FC                             i1l389 0663                             _UADDR 0E96  
                           _TRISC 008E                             _USTAT 0E8F                HIDSend@InterfaceNo 006A  
                  __CFG_FCMEN$OFF 0000                       _InDataStage 0175                             _Stall 06ED  
                           _inPtr 003D          ??_ProcessUSBTransactions 007C                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                     _HidIdleRate 0062                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                  __end_of_CheckUsb 06C0  
                  __CFG_MCLRE$OFF 0000                   __initialization 0014                  __end_of_BusReset 066F  
                    __end_of_main 06D0          ??_ProcessControlTransfer 0079                    __CFG_LPBOR$OFF 0000  
                     _DeviceState 0037                            ??_main 006B                       _HidProtocol 0063  
       __size_of_InitializeSystem 0014                 __end_of_HIDReport 009A                        _Interfaces 0020  
                       ??_HIDSend 0068               __CFG_USBLSCLK$48MHz 0000                __size_of_GetStatus 0054  
                       ??_ISRCode 007D                        _SetFeature 03AA                     _InitializeUSB 06D0  
                          ?_Stall 0070                            _ACTCON 039B                            _ANSELA 018C  
                          _ANSELC 018E                            i1l2013 06F4                            i1l2101 0331  
                          i1l2115 0346                            i1l2053 02F6                            i1l1531 0485  
                          i1l1611 03C3                            i1l2091 0328                            i1l2083 031D  
                          i1l2075 0312                            i1l2067 0307                            i1l1613 03C5  
                          i1l1713 0262                            i1l1705 0252                            i1l1633 0402  
                          i1l1547 04A4                            i1l1539 0496                            i1l1571 0581  
                          i1l1731 0285                            i1l1629 03FA                            i1l1815 01AC  
                          i1l1575 0587                            i1l1591 05B3                            i1l1735 028C  
                          i1l1817 01CF                            i1l1761 02BD                            i1l1745 029F  
                          i1l1827 01D0                            i1l1691 0237                            i1l1667 0214  
                          i1l1587 05AA                            i1l1765 02C4                            i1l1757 02B7  
                          i1l1749 02A6                            i1l1679 0224                            i1l1767 02C7  
                          i1l1919 037B                            i1l1943 03A7                            i1l1793 0182  
                          i1l1777 02D9                            i1l1795 0186                            i1l1699 0247  
                          i1l1973 0430                            i1l1965 0421                            i1l1975 0435  
                          i1l1889 05D4                            i1l1977 0438                            i1l1997 0460  
                          i1l1989 0450                            u220_25 0412                            i1l1999 0465  
                          u133_25 010C                            u214_25 05DA                            u150_25 059A  
                          u134_25 0124                            u135_25 0136                            u136_25 0144  
                          u160_25 03DE                            u137_25 0153                            u217_25 0375  
                          u138_25 0165                            u191_25 01B5                            u192_25 01D9  
                          _OSCCON 0099         ProcessHIDRequest@bRequest 0072                    __CFG_PWRTE$OFF 0000  
                  __CFG_STVREN$ON 0000            OutDataStage@bufferSize 0073                         ??_Suspend 0070  
                          _wCount 0032                        _SetupStage 0349                            _outPtr 003E  
              __size_of_UnSuspend 0008                __size_of_ProcessIO 001E                    ?_InitializeUSB 0070  
        __size_of_PrepareTxBuffer 001F           ?_ProcessStandardRequest 0070   __size_of_ProcessUSBTransactions 0068  
    GetDescriptor@descriptorIndex 0073                    _RequestHandled 003B           __end_of__initialization 002B  
           SetFeature@endpointDir 0075                 __end_of_GetStatus 05C0             SetFeature@endpointNum 0074  
                  __pcstackCOMMON 0070                     __end_of_Stall 06F6                      __pidataBANK0 0714  
 __size_of_ProcessControlTransfer 005E                 ?_EnableInterrupts 0070                         ?_CheckUsb 0070  
              ??_EnableInterrupts 0068      __end_of_ProcessIncommingData 069A    __end_of_ProcessStandardRequest 02E1  
                     ?_SetFeature 0070                           ??_Stall 0071           __size_of_ReArmInterface 0056  
              _IsUsbDataAvaialble 05F3          __end_of_HIDInitEndpoints 0175                         ?_BusReset 0070  
                      __pbssBANK0 0030                   _EnableUSBModule 066F  __end_of_StringDescriptorPointers 0035  
                   ?_OutDataStage 0070               ?_IsUsbDataAvaialble 0070                 __end_of_UnSuspend 0706  
               __end_of_ProcessIO 0655                  ??_ResetPPBuffers 0068             InDataStage@bufferSize 0073  
                      __pmaintext 06C0                   __CFG_PLLMULT$3x 0000            _ProcessUSBTransactions 02E1  
                      __pintentry 0004                       ?_SetupStage 0070                       _SelfPowered 003C  
                _InitializeSystem 069A              ??_IsUsbDataAvaialble 0068                   ??_InitializeUSB 0068  
                         _HIDSend 0517                        ??_CheckUsb 006B                      ?_InDataStage 0070  
                         _ISRCode 0004                           _OSCTUNE 0098                           _UIEbits 0E92  
                      ??_BusReset 0071                           _UIRbits 0E90            _ProcessControlTransfer 040A  
                  ??_OutDataStage 0070                 ??_PrepareTxBuffer 0068                           _Buffers 0064  
             __size_of_SetFeature 0060                           _Suspend 0706                     OutDataStage@i 0071  
                         __ptext1 0637                           __ptext2 06AE                           __ptext3 04C1  
                         __ptext4 0685                           __ptext5 0618                           __ptext6 05F3  
                         __ptext7 0517                           __ptext8 06D0                           __ptext9 0718  
          __size_of_GetDescriptor 0059                       _SetupPacket 0040           __end_of_EnableUSBModule 0685  
                       _HIDReport 006B                           clrloop0 070F              end_of_initialization 002B  
             __size_of_SetupStage 0061              _ProcessIncommingData 0685         ReArmInterface@InterfaceNo 006A  
                   ?_StartOfFrame 0070                      __pstringtext 002F                  __CFG_FOSC$INTOSC 0000  
                  _ReArmInterface 04C1     ProcessStandardRequest@request 0077                         _ROMoutPtr 0030  
                   _GetDescriptor 0468             ?_ProcessIncommingData 0070                __CFG_PLLEN$ENABLED 0000  
                  ??_StartOfFrame 0070                      InDataStage@i 0072              GetStatus@endpointDir 0073  
            GetStatus@endpointNum 0072                         _GetStatus 056C   __end_of_ConfigurationDescriptor 00C3  
            __end_of_OutDataStage 05F3            __end_of_ReArmInterface 0517                 _StringDescriptor0 00ED  
               _StringDescriptor1 00C3                 _StringDescriptor2 0035               start_initialization 0014  
                    ??_SetFeature 0070                  ?_EnableUSBModule 0070                 __size_of_CheckUsb 0012  
                    _ButtonStatus 0034              __size_of_InDataStage 007D                 ?_HIDInitEndpoints 0070  
       __size_of_EnableInterrupts 0008                     _DeviceAddress 0036                 __size_of_BusReset 001A  
              ??_HIDInitEndpoints 0070                    ?_GetDescriptor 0070          __end_of_InitializeSystem 06AE  
         ?_ProcessUSBTransactions 0070                         _UnSuspend 06FE                __end_of_SetFeature 040A  
                       _ProcessIO 0637                        ?_GetStatus 0070                       __pdataBANK0 0064  
                    ??_SetupStage 0078                 HIDInitEndpoints@i 0074         __end_of_StringDescriptor0 00F1  
       __end_of_StringDescriptor1 00DB         __end_of_StringDescriptor2 006B       GetDescriptor@descriptorType 0074  
                        ?_HIDSend 0070                   ?_ReArmInterface 0070                   _PrepareTxBuffer 0618  
                       ___latbits 0002                     __pcstackBANK0 0068                          ?_ISRCode 0070  
         ?_ProcessControlTransfer 0070    __end_of_ProcessUSBTransactions 0349            ??_ProcessIncommingData 006A  
              __end_of_SetupStage 03AA                  PrepareTxBuffer@i 0069                 _ProcessHIDRequest 01F2  
                      ?_UnSuspend 0070                        ?_ProcessIO 0070                          ?_Suspend 0070  
              ?_ProcessHIDRequest 0070       __size_of_IsUsbDataAvaialble 0025               ??_ProcessHIDRequest 0070  
  __end_of_ProcessControlTransfer 0468             __end_of_InitializeUSB 06DF                    __size_of_Stall 0009  
            __end_of_StartOfFrame 071F                   ??_GetDescriptor 0070                         clear_ram0 070E  
                        _PIE2bits 0092                  _DeviceDescriptor 00DB         __end_of_ProcessHIDRequest 026D  
                        _PIR2bits 0012                       _HIDRxBuffer 0051                          _UEP0bits 0E98  
           __size_of_OutDataStage 0033                       _HIDTxBuffer 0059                          _UCONbits 0E8E  
                     ??_GetStatus 0070           __end_of_PrepareTxBuffer 0637          ??_ProcessStandardRequest 0076  
         __size_of_ResetPPBuffers 0004                          _CheckUsb 06AE                      _RemoteWakeup 003A  
                __size_of_HIDSend 0055                          _HidRxLen 0039                  __size_of_ISRCode 000E  
                        _BusReset 0655                  _EnableInterrupts 06F6                      _OutDataStage 05C0  
           _ControlTransferBuffer 0049                 _CtrlTransferStage 0035                       ??_UnSuspend 0070  
                     ??_ProcessIO 006B                  __size_of_Suspend 0008                     _EndpointFlags 0E99  
 ProcessHIDRequest@descriptorType 0071                 _WaitForSetupStage 06DF                ?_WaitForSetupStage 0070  
                        __ptext10 069A                          __ptext11 066F                          __ptext20 0349  
                        __ptext12 06F6                          __ptext21 026D                          __ptext30 06DF  
                        __ptext22 03AA                          __ptext14 02E1                          __ptext23 00F1  
                        __ptext15 06FE                          __ptext24 056C                          __ptext16 0706  
                        __ptext25 0468                          __ptext17 071C                          __ptext26 01F2  
                        __ptext18 06ED                          __ptext27 0175                          __ptext19 040A  
                        __ptext28 05C0                          __ptext29 0655               ??_WaitForSetupStage 0070  
             SetFeature@recipient 0072                     __size_of_main 0010                 ?_InitializeSystem 0070  
      __size_of_ProcessHIDRequest 007B                ??_InitializeSystem 0068                          int$flags 007E  
        _StringDescriptorPointers 002F         __size_of_HIDInitEndpoints 0084         __end_of_WaitForSetupStage 06ED  
                ??_ReArmInterface 0068                  ?_PrepareTxBuffer 0070   __size_of_ProcessStandardRequest 0074  
           __size_of_StartOfFrame 0003                        _INTCONbits 000B                     ??_InDataStage 0070  
       ProcessControlTransfer@PID 007B                          intlevel1 0000                GetStatus@recipient 0074  
         _ConfigurationDescriptor 009A          __size_of_EnableUSBModule 0016                 __CFG_CLKOUTEN$OFF 0000  
                    _StartOfFrame 071C              __CFG_CPUDIV$NOCLKDIV 0000                 SetFeature@feature 0073  
                  _ResetPPBuffers 0718                    _HIDPostProcess 0038                        _OPTION_REG 0095  
        __end_of_DeviceDescriptor 00ED            _ProcessStandardRequest 026D               __end_of_InDataStage 01F2  
   __size_of_ProcessIncommingData 0015  
